{"ast":null,"code":"// To add:\n// 1. Default function for calling any contract that makes sure there will be no errors,\n//    waits for any missing information, and has error handling.\n//      -This will include confirming that providers._network is defined\n\n// Admin page:\n// 1. Import admin settings from json, then create backup copy, then edit json to modify site\n// 2. Detailed settings for individual pages such as website.com/avatar are modified at website.com/admin/avatar\n//    Then, gate all /admin pages behind admin login\n\n// Web3 Oracles\n// 1. Supra\n// 2. Gelato\n// 3. ChainLink\n\n//--------------------------------------------------------------------------------------------------\n//# Imports\n\nimport { FormatTypes, Interface } from \"@ethersproject/abi\";\nconst fs = require(\"fs\");\nconst {\n  ethers\n} = require(\"ethers\");\n//const { utils } = require('ethers').utils;\n//const { BigNumber } = require('ethers').BigNumber;\n\n//--------------------------------------------------------------------------------------------------\n//# Variable Declaration\n\nlet run_on_load = false;\nconst default_contract_name = 'MelioraComicV1';\nlet contract_dict = {\n  'default': {},\n  'Signatures': {\n    'Address': {\n      'mainnet': '',\n      'goerli': '0x22d95fff7bb4e88bf1651daea74e36896919dbc0',\n      'sepolia': '0x1Fd69E3941030940f58e537B15bea96F5e766291',\n      'optimism': '',\n      'optimism_sepolia': '0x1Fd69E3941030940f58e537B15bea96F5e766291'\n    },\n    'ABI': `[{\n                                    \"inputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"constructor\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"approved\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"Approval\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"operator\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"approved\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"name\": \"ApprovalForAll\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"_fromTokenId\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"_toTokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"BatchMetadataUpdate\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"_tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"MetadataUpdate\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"previousOwner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"newOwner\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"OwnershipTransferred\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"PrimaryTokenAssigned\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_timestamp\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"completer_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"TaskCompleted\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_count\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_metadata_URI\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"name\": \"TaskCreated\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"Transfer\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"whitelist_tier\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"WhitelistAssigned\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_metadata_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__createTask\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__mintFree\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"new_collectionInfoURI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__setContractURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"old_collectionInfoURI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"new_max_supply\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"__setMaxSupply\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"old_max_supply\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"new_price\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"whitelist_tier\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"__setMintPrice\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"old_price\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"__setPrimaryTokenID\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__setTokenURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"old_token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"_maxSupply\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"approve\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"balanceOf\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"characters\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"metadata_URI\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tasks_completed\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"collectionInfoURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"completeTask\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"contractURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"getApproved\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"getCharacter\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"string[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"string[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes32[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"bytes32[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"address[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"address[]\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"getMaxSupply\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"whitelist_tier\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"getMintPrice\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"index\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"getPrimaryHolderByIndex\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"getPrimaryHolderCount\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"getPrimaryTokenID\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"getPrimaryTokenURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"_tokenURI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"getTask\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"\",\n                                        \"type\": \"bytes32\"\n                                      },\n                                      {\n                                        \"internalType\": \"address[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"address[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"getTaskHash\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"getWhitelistTier\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"holderPrimaryTokens\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"operator\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"isApprovedForAll\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"mint\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"payable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"mint_limits\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"mint_prices\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"name\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"owner\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"ownerOf\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"primaryTokenHolderIndex\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"renounceOwnership\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"safeTransferFrom\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes\",\n                                        \"name\": \"data\",\n                                        \"type\": \"bytes\"\n                                      }\n                                    ],\n                                    \"name\": \"safeTransferFrom\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"operator\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"approved\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"name\": \"setApprovalForAll\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"setPrimaryTokenID\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"bytes4\",\n                                        \"name\": \"interfaceId\",\n                                        \"type\": \"bytes4\"\n                                      }\n                                    ],\n                                    \"name\": \"supportsInterface\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"symbol\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"name\": \"taskHashArray\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"tasks\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"metadata_URI\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_creation_timestamp\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"task_creator_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"tokenURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"transferFrom\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"newOwner\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"transferOwnership\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"whitelist_tiers\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  }]`,\n    'Functions': {\n      'mint': {\n        'number_of_inputs': 1\n      },\n      '__mintFree': {\n        'number_of_inputs': 1\n      },\n      'contractURI': {\n        'number_of_inputs': 0\n      },\n      '__setContractURI': {\n        'number_of_inputs': 1\n      },\n      'getMintPrice': {\n        'number_of_inputs': 0\n      },\n      '__setMintPrice': {\n        'number_of_inputs': 1\n      },\n      'getMaxSupply': {\n        'number_of_inputs': 0\n      },\n      '__setMaxSupply': {\n        'number_of_inputs': 1\n      },\n      'tokenURI': {\n        'number_of_inputs': 1\n      },\n      '__setTokenURI': {\n        'number_of_inputs': 2\n      },\n      'lockToken': {\n        'number_of_inputs': 2\n      },\n      '__lockToken': {\n        'number_of_inputs': 2\n      },\n      'unlockToken': {\n        'number_of_inputs': 1\n      },\n      '__unlockToken': {\n        'number_of_inputs': 1\n      },\n      'getTimeLocked': {\n        'number_of_inputs': 1\n      },\n      'getLocked': {\n        'number_of_inputs': 1\n      },\n      'getPrimaryTokenID': {\n        'number_of_inputs': 1\n      },\n      'setPrimaryTokenID': {\n        'number_of_inputs': 2\n      },\n      'getPrimaryTokenURI': {\n        'number_of_inputs': 1\n      },\n      'getPrimaryHolderByIndex': {\n        'number_of_inputs': 1\n      },\n      'getPrimaryHolderCount': {\n        'number_of_inputs': 0\n      },\n      '__createTask': {\n        'number_of_inputs': 3\n      },\n      'getTaskHash': {\n        'number_of_inputs': 2\n      },\n      'getTask': {\n        'number_of_inputs': 2\n      },\n      'getCharacter': {\n        'number_of_inputs': 1\n      },\n      'completeTask': {\n        'number_of_inputs': 2\n      },\n      'completeTaskBatch': {\n        'number_of_inputs': 2\n      },\n      'setApprovalForAll': {\n        'number_of_inputs': 2\n      }\n    }\n  },\n  'MelioraComicV1': {\n    'Address': {\n      'mainnet': '',\n      'polygon': '',\n      'mumbai': '0xbAE8C07F52d440573e503d4a89A056Cd1E1907e3',\n      'base': '0x4E35d70889B5A698fE9AE2C19CB280f29DBDF7eC',\n      'base_sepolia': '',\n      'goerli': '',\n      'sepolia': '0xE67EF54708a1e49591c804970091d36c1b780f36',\n      'optimism': '',\n      'optimism_sepolia': '0xDd87063B0fb8F7b13AFA7886F51106013004744f'\n    },\n    'ABI_location': '../../../artifacts/contracts/MelioraComicV1.sol',\n    'ABI': `[{\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"initialOwner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"constructor\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"numerator\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"denominator\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC2981InvalidDefaultRoyalty\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"receiver\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC2981InvalidDefaultRoyaltyReceiver\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"numerator\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"denominator\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC2981InvalidTokenRoyalty\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"receiver\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC2981InvalidTokenRoyaltyReceiver\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"sender\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721IncorrectOwner\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"operator\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InsufficientApproval\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"approver\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InvalidApprover\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"operator\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InvalidOperator\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InvalidOwner\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"receiver\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InvalidReceiver\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"sender\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InvalidSender\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721NonexistentToken\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"OwnableInvalidOwner\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"account\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"OwnableUnauthorizedAccount\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"approved\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"Approval\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"operator\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"bool\",\n                                                \"name\": \"approved\",\n                                                \"type\": \"bool\"\n                                              }\n                                            ],\n                                            \"name\": \"ApprovalForAll\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"_fromTokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"_toTokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"BatchMetadataUpdate\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"_tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"MetadataUpdate\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"previousOwner\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"newOwner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"OwnershipTransferred\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"from\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"to\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"Transfer\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              },\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"user_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"WhitelistAssigned\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"name\": \"__mintFree\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"token_ID\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"new_collectionInfoURI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"name\": \"__setContractURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"old_collectionInfoURI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"receiver_address\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint96\",\n                                                \"name\": \"fee_numerator\",\n                                                \"type\": \"uint96\"\n                                              }\n                                            ],\n                                            \"name\": \"__setDefaultRoyalty\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"name\": \"__setDefaultTokenURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"old_default_token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address payable\",\n                                                \"name\": \"recipient_address\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"fund_weight\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"__setFundRecipientWeight\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"old_fund_weight\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"new_max_supply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"__setMaxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"old_max_supply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"new_limit\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"__setMintLimit\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"old_limit\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"new_price\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"__setMintPrice\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"old_price\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"token_ID\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"name\": \"__setTokenURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"old_token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"name\": \"__setUniqueTokenBaseURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"old_unique_token_base_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"new_unique_token_maxSupply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"__setUniqueTokenMaxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"old_unique_token_maxSupply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"new_whitelist_minimum_requirement\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"__setWhitelistMinimumRequirement\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"old_whitelist_minimum_requirement\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"new_whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"user_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"__setWhitelistTier\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"old_whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"__updateAllDefaultTokenURIs\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"current_supply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"__updateAllUniqueTokenURIs\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"current_supply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"_currentTokenID\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"_maxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"to\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"approve\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"balanceOf\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"collectionInfoURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"contractURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"defaultTokenURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"fundRecipientCount\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"fund_recipient_addresses\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"address payable\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"fund_recipient_weights\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"getApproved\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getCurrentSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getDefaultTokenURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getFundRecipientCount\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"recipient_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"getFundRecipientWeight\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getMaxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"getMintLimit\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"getMintPrice\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getMyMintLimit\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getMyMintPrice\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getMyWhitelistTier\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getTotalFundWeight\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getUniqueTokenBaseURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getUniqueTokenMaxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getUniqueTokenSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"unique_token_supply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"user_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"getUserMintLimit\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"user_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"getUserMintPrice\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getWhitelistMinimumRequirement\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"user_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"getWhitelistTier\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"operator\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"isApprovedForAll\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"bool\",\n                                                \"name\": \"\",\n                                                \"type\": \"bool\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"recipient_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"isHuman\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"bool\",\n                                                \"name\": \"\",\n                                                \"type\": \"bool\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"mint\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"token_ID\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"payable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"amount\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"mintBatch\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"token_ID\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"payable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"mint_counts\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"mint_limits\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"mint_prices\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"name\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"owner\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"ownerOf\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"renounceOwnership\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"salePrice\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"royaltyInfo\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"from\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"to\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"safeTransferFrom\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"from\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"to\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"bytes\",\n                                                \"name\": \"data\",\n                                                \"type\": \"bytes\"\n                                              }\n                                            ],\n                                            \"name\": \"safeTransferFrom\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"operator\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"bool\",\n                                                \"name\": \"approved\",\n                                                \"type\": \"bool\"\n                                              }\n                                            ],\n                                            \"name\": \"setApprovalForAll\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"bytes4\",\n                                                \"name\": \"interfaceId\",\n                                                \"type\": \"bytes4\"\n                                              }\n                                            ],\n                                            \"name\": \"supportsInterface\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"bool\",\n                                                \"name\": \"\",\n                                                \"type\": \"bool\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"symbol\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"tokenURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"total_fund_weight\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"from\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"to\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"transferFrom\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"newOwner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"transferOwnership\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"uniqueTokenBaseURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"unique_token_maxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"whitelist_minimum_requirement\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"whitelist_tiers\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          }]`,\n    'Functions': {\n      'mint': [],\n      'mintBatch': ['amount'],\n      '__mintFree': ['token_URI'],\n      '__toggleMintLocked': [],\n      'contractURI': [],\n      '__setContractURI': ['new_contract_URI'],\n      'getCurrentSupply': [],\n      'getMaxSupply': [],\n      '__setMaxSupply': ['new_max_supply'],\n      'getUniqueTokenSupply': [],\n      'getUniqueTokenMaxSupply': [],\n      '__setUniqueTokenMaxSupply': ['new_unique_token_maxSupply'],\n      'getWhitelistTier': ['user_address'],\n      '__setWhitelistTier': ['whitelist_tier', 'user_address'],\n      'getWhitelistMinimumRequirement': [],\n      '__setWhitelistMinimumRequirement': ['new_whitelist_minimum_requirement'],\n      'getMintPrice': ['whitelist_tier'],\n      'getUserMintPrice': ['user_address'],\n      'getMyMintPrice': [],\n      '__setMintPrice': ['whitelist_tier', 'new_mint_price'],\n      'getMintLimit': ['whitelist_tier'],\n      'getUserMintLimit': ['user_address'],\n      'getMyMintLimit': [],\n      '__setMintLimit': ['whitelist_tier', 'mint_limit'],\n      'tokenURI': ['token_ID'],\n      '__setTokenURI': ['token_ID', 'new_token_URI'],\n      'getDefaultTokenURI': [],\n      '__setDefaultTokenURI': ['defaultTokenURI'],\n      'getUniqueTokenBaseURI': [],\n      '__setUniqueTokenBaseURI': ['uniqueTokenBaseURI'],\n      '__updateAllDefaultTokenURIs': [],\n      '__updateAllUniqueTokenURIs': [],\n      '__setFundRecipientWeight': ['recipient_address', 'fund_weight'],\n      'getFundRecipientWeight': ['recipient_address'],\n      'getFundRecipientCount': [],\n      'getTotalFundWeight': [],\n      'royaltyInfo': ['tokenId', 'salePrice'],\n      '__setDefaultRoyalty': ['receiver_address', 'fee_percent'],\n      'setRoyaltyRecipient': ['receiver_address'],\n      'setRoyaltyFee': ['int_over_10000'],\n      'setApprovalForAll': ['thing_1', 'thing_2']\n    }\n  },\n  'LMNTL': {\n    'Address': {\n      'mainnet': '',\n      'goerli': '0xA70CB9f3768D9AEdF7390Fed92770dCDdE1D0C1D',\n      'hyperspace': '0xB4fECac2F5BdEc2eD15547cF857464c8691b9849'\n    },\n    'ABI': `[]`,\n    'Functions': {\n      'mint': {\n        'number_of_inputs': 1\n      }\n    }\n  },\n  'FundSplitter': {\n    'Address': {\n      'mainnet': '',\n      'mumbai': '0xE20c8268Bb7efCa16842300148553cDb7910A4A1',\n      'base': '0xA47bD73D576544ca4380B614C1E7f9B3B3d601b9',\n      'base_sepolia': '',\n      'goerli': '',\n      'sepolia': '',\n      'optimism': '',\n      'optimism_sepolia': ''\n    },\n    'ABI_location': '../../../artifacts/contracts/FundSplitter.sol',\n    'ABI': `[{\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"initialOwner\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"constructor\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"owner\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"OwnableInvalidOwner\",\n                                        \"type\": \"error\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"account\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"OwnableUnauthorizedAccount\",\n                                        \"type\": \"error\"\n                                      },\n                                      {\n                                        \"anonymous\": false,\n                                        \"inputs\": [\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"previousOwner\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"newOwner\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"OwnershipTransferred\",\n                                        \"type\": \"event\"\n                                      },\n                                      {\n                                        \"stateMutability\": \"payable\",\n                                        \"type\": \"fallback\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address payable\",\n                                            \"name\": \"recipient_address\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"fund_weight\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"name\": \"__setFundRecipientWeight\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"old_fund_weight\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"getFundRecipientCount\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"recipient_address\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"getFundRecipientWeight\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"getTotalFundWeight\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"owner\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"renounceOwnership\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"newOwner\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"transferOwnership\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"stateMutability\": \"payable\",\n                                        \"type\": \"receive\"\n                                      }]`,\n    'Functions': {\n      'mint': [],\n      'mintBatch': ['amount'],\n      '__mintFree': ['token_URI'],\n      'contractURI': [],\n      '__setContractURI': ['new_contract_URI'],\n      'getCurrentSupply': [],\n      'getMaxSupply': [],\n      '__setMaxSupply': ['new_max_supply'],\n      'getUniqueTokenSupply': [],\n      'getUniqueTokenMaxSupply': [],\n      '__setUniqueTokenMaxSupply': ['new_unique_token_maxSupply'],\n      'getWhitelistTier': ['user_address'],\n      '__setWhitelistTier': ['whitelist_tier', 'user_address'],\n      'getWhitelistMinimumRequirement': [],\n      '__setWhitelistMinimumRequirement': ['new_whitelist_minimum_requirement'],\n      'getMintPrice': ['whitelist_tier'],\n      'getUserMintPrice': ['user_address'],\n      'getMyMintPrice': [],\n      '__setMintPrice': ['whitelist_tier', 'new_mint_price'],\n      'getMintLimit': ['whitelist_tier'],\n      'getUserMintLimit': ['user_address'],\n      'getMyMintLimit': [],\n      '__setMintLimit': ['whitelist_tier', 'mint_limit'],\n      'tokenURI': ['token_ID'],\n      '__setTokenURI': ['token_ID', 'new_token_URI'],\n      'getDefaultTokenURI': [],\n      '__setDefaultTokenURI': ['defaultTokenURI'],\n      'getUniqueTokenBaseURI': [],\n      '__setUniqueTokenBaseURI': ['uniqueTokenBaseURI'],\n      '__updateAllDefaultTokenURIs': [],\n      '__updateAllUniqueTokenURIs': [],\n      '__setFundRecipientWeight': ['recipient_address', 'fund_weight'],\n      'getFundRecipientWeight': ['recipient_address'],\n      'getFundRecipientCount': [],\n      'getTotalFundWeight': [],\n      'royaltyInfo': ['tokenId', 'salePrice'],\n      '__setDefaultRoyalty': ['receiver_address', 'fee_percent'],\n      'setRoyaltyRecipient': ['receiver_address'],\n      'setRoyaltyFee': ['int_over_10000'],\n      '__setRoyaltyReceiver': ['receiver_address'],\n      'setApprovalForAll': ['thing_1', 'thing_2']\n    }\n  }\n};\nvar contract_name = default_contract_name;\ncontract_dict['default'] = contract_dict[default_contract_name];\n\n// *Update metadata URIs with your IPFS files' information\nconst folder_URIs = {\n  NFT_Storage: 'bafybeiglxxim4fc4jxl53kxoxjsnrf7efcabx4jikrgrz2ralmgqlj6yai',\n  Pinata: 'QmcvaEQrzwiNjDZzJX1jBq5zDtvF9yc2Le6nyjquABEGmh',\n  Pinata_old: 'QmPF4nrDbTnGk2UWduZDw2FCHZcF6HJicYDdsDAkEqJgH7'\n};\nconst JSON_URIs = {\n  NFT_Storage: {\n    0: '/LMNTLfire1.json',\n    1: '/LMNTLwater1.json',\n    2: '/LMNTLair1.json',\n    3: '/LMNTLearth1.json',\n    4: '/LMNTLfire2.json',\n    5: '/LMNTLwater2.json',\n    6: '/LMNTLair2.json',\n    7: '/LMNTLearth2.json',\n    background_list: \"bafybeicc2gguyju7625a3c6ie2gyukggwhgcle64a73bo4yxrtrr6zf2fi/background_list.json\",\n    pac_list: \"bafybeigmgu2k25bxwjmwxwrr2kwiwzzjpuy3mzew2yochngedqof5zgmu4/pac_list.json\"\n  },\n  Pinata: {\n    0: '/LMNTLfire1.json',\n    1: '/LMNTLwater1.json',\n    2: '/LMNTLair1.json',\n    3: '/LMNTLearth1.json',\n    4: '/LMNTLfire2.json',\n    5: '/LMNTLwater2.json',\n    6: '/LMNTLair2.json',\n    7: '/LMNTLearth2.json'\n  },\n  Pinata_old: {\n    0: '/LMNTLfire1.png',\n    1: '/LMNTLwater1.png',\n    2: '/LMNTLair1.png',\n    3: '/LMNTLearth1.png',\n    4: '/LMNTLfire2.png',\n    5: '/LMNTLwater2.png',\n    6: '/LMNTLair2.png',\n    7: '/LMNTLearth2.png'\n  }\n};\nconst network_IPFS_dict = {\n  'mainnet': 'Pinata',\n  'goerli': 'NFT_Storage',\n  'hyperspace': 'NFT_Storage',\n  'sepolia': 'NFT_Storage'\n};\nconst IPFS_prefixes = {\n  Pinata: 'https://gateway.pinata.cloud/ipfs/',\n  Pinata_old: 'https://gateway.pinata.cloud/ipfs/',\n  Infura: '',\n  NFT_Storage: 'https://nftstorage.link/ipfs/'\n};\nconst network_dict = {\n  'default': {},\n  'ethereum': {\n    'name': 'ethereum',\n    'chainId': 1,\n    'url': 'https://mainnet.infura.io/v3/',\n    'add_network': {\n      chainId: '0x1',\n      // Chain ID of the network\n      chainName: 'Ethereum Mainnet',\n      // Name of the network\n      rpcUrls: ['https://mainnet.infura.io/v3/'],\n      // RPC URL\n      nativeCurrency: {\n        name: 'ETH',\n        symbol: 'ETH',\n        decimals: 18\n      },\n      blockExplorerUrls: ['https://etherscan.io/']\n    }\n  },\n  'goerli': {\n    'name': 'goerli',\n    'chainId': 5,\n    'url': ''\n  },\n  'polygon': {\n    'name': 'polygon',\n    'chainId': 137,\n    'url': '',\n    'add_network': {\n      chainId: \"0x89\",\n      rpcUrls: [\"https://rpc-mainnet.matic.network/\"],\n      chainName: \"Matic Mainnet\",\n      nativeCurrency: {\n        name: \"MATIC\",\n        symbol: \"MATIC\",\n        decimals: 18\n      },\n      blockExplorerUrls: [\"https://polygonscan.com/\"]\n    }\n  },\n  'mumbai': {\n    'name': 'mumbai',\n    'chainId': 80001,\n    'url': 'https://rpc.ankr.com/polygon_mumbai',\n    'add_network': {\n      chainId: \"0x13881\",\n      rpcUrls: [\"https://rpc.ankr.com/polygon_mumbai\"],\n      chainName: \"Mumbai Testnet\",\n      nativeCurrency: {\n        name: \"MATIC\",\n        symbol: \"MATIC\",\n        decimals: 18\n      },\n      blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\n    }\n  },\n  'sepolia': {\n    'name': 'sepolia',\n    'chainId': 11155111,\n    'url': 'https://sepolia.infura.io/v3/',\n    'add_network': {\n      chainId: \"0x2105\",\n      rpcUrls: [\"https://sepolia.infura.io/v3/\"],\n      chainName: \"Base\",\n      nativeCurrency: {\n        name: \"ETH\",\n        symbol: \"ETH\",\n        decimals: 18\n      },\n      blockExplorerUrls: [\"https://sepolia.etherscan.io/\"]\n    }\n  },\n  'optimism': {\n    'name': 'optimism',\n    'chainId': 10,\n    'url': ''\n  },\n  'optimism_sepolia': {\n    'name': 'optimism_sepolia',\n    'chainId': 11155420,\n    'url': ''\n  },\n  'base': {\n    'name': 'base',\n    'chainId': 8453,\n    'url': 'https://mainnet.base.org',\n    'add_network': {\n      chainId: \"0x2105\",\n      rpcUrls: [\"https://mainnet.base.org\", \"https://base.llamarpc.com\"],\n      chainName: \"Base\",\n      nativeCurrency: {\n        name: \"ETH\",\n        symbol: \"ETH\",\n        decimals: 18\n      },\n      blockExplorerUrls: [\"https://basescan.org/\"]\n    }\n  },\n  'base_sepolia': {\n    'name': 'base_sepolia',\n    'chainId': 84532,\n    'url': 'https://base-sepolia-rpc.publicnode.com',\n    'add_network': {\n      chainId: \"0x14a34\",\n      rpcUrls: [\"https://base-sepolia-rpc.publicnode.com\"],\n      chainName: \"Base Sepolia\",\n      nativeCurrency: {\n        name: \"ETH\",\n        symbol: \"ETH\",\n        decimals: 18\n      },\n      blockExplorerUrls: [\"https://sepolia.basescan.org/\"]\n    }\n  },\n  1: {\n    'name': 'ethereum',\n    'chainId': 1,\n    'url': 'https://mainnet.infura.io/v3/'\n  },\n  5: {\n    'name': 'goerli',\n    'chainId': 5,\n    'url': ''\n  },\n  137: {\n    'name': 'polygon',\n    'chainId': 137,\n    'url': ''\n  },\n  80001: {\n    'name': 'mumbai',\n    'chainId': 80001,\n    'url': ''\n  },\n  11155111: {\n    'name': 'sepolia',\n    'chainId': 11155111,\n    'url': 'https://sepolia.infura.io/v3/'\n  },\n  10: {\n    'name': 'optimism',\n    'chainId': 10,\n    'url': ''\n  },\n  11155420: {\n    'name': 'optimism_sepolia',\n    'chainId': 11155420,\n    'url': ''\n  },\n  8453: {\n    'name': 'base',\n    'chainId': 8453,\n    'url': 'https://base.llamarpc.com'\n  },\n  84532: {\n    'name': 'base_sepolia',\n    'chainId': 84532,\n    'url': 'https://base-sepolia-rpc.publicnode.com'\n  }\n};\nconst default_network = 'sepolia';\nvar network_name = default_network;\nvar network_ID = network_dict[default_network]['chainId'];\nnetwork_dict['default'] = network_dict[default_network];\nconst opensea_link_delay = 8;\nconst opensea_prefixes = {\n  'mainnet': 'https://opensea.io/assets/ethereum/',\n  'goerli': 'https://testnets.opensea.io/assets/goerli/',\n  'sepolia': 'https://testnets.opensea.io/assets/sepolia/',\n  'hyperspace': ''\n};\n\n// These variables are set as Context variables to be accessed by other components\nvar user_address, user_token_ID, user_metadata_URI, user_metadata, user_avatar_URI, user_balance, contract_name;\nvar provider, signer, user_web_wallet;\nvar user_minted_NFT = false;\n\n//--------------------------------------------------------------------------------------------------\n//# Basic Functions\n\n//const [address, toggleConnected] = useState(0);\n//const [isMinted, toggleMinted] = useState(0);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction pause(time) {\n  return new Promise(resolve => setTimeout(resolve, time));\n}\nasync function getRounding(number) {\n  // Convert the number to a string\n  const number_string = number.toString();\n  console.log('number_string:', number_string);\n  // Find the position of the decimal point\n  const decimal_index = number_string.indexOf('.');\n\n  // If there is no decimal point, return 0\n  if (decimal_index === -1) {\n    return 0;\n  }\n  const rounding_amount = number_string.length - decimal_index - 1;\n\n  // Return the number of characters after the decimal point\n  return rounding_amount;\n}\n;\n\n//--------------------------------------------------------------------------------------------------\n//# Wallet & Metadata Functions\n\nif (run_on_load) {\n  onLoad();\n}\n;\nasync function onLoad() {\n  if (run_on_load) {\n    run_on_load = false;\n    await connectWallet();\n    contract_dict['Signatures']['Functions'] = await parseABIfunctions(contract_dict['Signatures']['ABI']);\n    console.log(\"Functions:\", contract_dict['Signatures']['Functions']);\n  }\n}\nasync function setProvider() {\n  provider = new ethers.providers.Web3Provider(window.ethereum);\n  console.log('Provider: ', provider);\n  user_web_wallet = provider['connection']['url'];\n  console.log('Web Wallet: ', user_web_wallet);\n  if ('_network' in provider) {\n    network_name = provider['_network']['name'];\n    console.log('Network: ', network_name);\n  }\n  ;\n  return provider;\n}\n;\nasync function setSigner(provider_input) {\n  if (!provider_input) {\n    provider_input = provider;\n  }\n  ;\n  if (!provider_input) {\n    provider_input = await setProvider();\n  }\n  ;\n  // Prompt user for account connections\n  await provider_input.send(\"eth_requestAccounts\", []);\n  signer = await provider_input.getSigner();\n  console.log('Signer: ', signer);\n  return signer;\n}\n;\nasync function setUserAddress(signer_input) {\n  if (!signer_input) {\n    signer_input = signer;\n  }\n  ;\n  if (!signer_input) {\n    signer_input = await setSigner();\n  }\n  ;\n  user_address = await signer_input.getAddress();\n  console.log('Address: ', user_address);\n  return user_address;\n}\nasync function setUserBalance(signer_input) {\n  if (!signer_input) {\n    signer_input = signer;\n  }\n  ;\n  if (!signer_input) {\n    signer_input = await setSigner();\n  }\n  ;\n  user_balance = await signer_input.getBalance();\n  user_balance = ethers.utils.formatEther(user_balance);\n  console.log('Balance: ', user_balance);\n  return user_balance;\n}\n;\nexport async function setUserTokenID(contract_name_input, address_input) {\n  // Set user address\n  if (!address_input) {\n    address_input = user_address;\n  }\n  ;\n  if (!address_input) {\n    address_input = await setUserAddress();\n  }\n  ;\n\n  // Set contract name\n  if (!contract_name_input) {\n    contract_name_input = contract_name;\n  }\n  ;\n  if (!contract_name_input) {\n    contract_name_input = default_contract_name;\n  }\n  ;\n  const contract = new ethers.Contract(contract_dict[contract_name_input]['Address'][network_name], contract_dict[contract_name_input]['ABI'], provider);\n  user_token_ID = await contract.getPrimaryTokenID(address_input);\n  console.log('User Token ID: ', user_token_ID);\n  return user_token_ID;\n}\n;\nexport async function setUserMetadata(contract_name_input, address_input) {\n  // Set user address\n  if (!address_input) {\n    address_input = user_address;\n  }\n  ;\n  if (!address_input) {\n    address_input = await setUserAddress();\n  }\n  ;\n\n  // Set contract name\n  if (!contract_name_input) {\n    contract_name_input = contract_name;\n  }\n  ;\n  if (!contract_name_input) {\n    contract_name_input = default_contract_name;\n  }\n  ;\n  const contract = new ethers.Contract(contract_dict[contract_name_input]['Address'][network_name], contract_dict[contract_name_input]['ABI'], provider);\n  user_metadata_URI = await contract.getPrimaryTokenURI(address_input);\n  if (user_metadata_URI.includes('.json')) {\n    try {\n      const response = await fetch(user_metadata_URI);\n      user_metadata = await response.json();\n      user_metadata['URI'] = user_metadata_URI;\n      console.log('User Metadata: ', user_metadata);\n      return user_metadata;\n    } catch (error) {\n      console.log('setUserMetadata Error:', error.message);\n    }\n    ;\n  } else {\n    return user_metadata_URI;\n  }\n  ;\n}\n;\nexport async function setUserAvatarURI(metadata_input) {\n  if (!metadata_input) {\n    metadata_input = user_metadata;\n  }\n  ;\n  if (!metadata_input) {\n    metadata_input = await setUserMetadata();\n  }\n  ;\n  if (typeof metadata_input === 'string') {\n    user_avatar_URI = metadata_input;\n  } else {\n    user_avatar_URI = metadata_input['image'];\n  }\n  console.log('User Avatar URI: ', user_avatar_URI);\n  return user_avatar_URI;\n}\n;\nexport async function getMetadataURI(metadata_info) {\n  if (!network_name) {\n    network_name = getNetwork();\n  }\n  var metadata_URI;\n  const IPFS_name = network_IPFS_dict[network_name];\n\n  // Pre-set Image URI\n  if (JSON_URIs[IPFS_name][metadata_info]) {\n    metadata_URI = IPFS_prefixes[IPFS_name] + folder_URIs[IPFS_name] + JSON_URIs[IPFS_name][metadata_info];\n  } else {\n    metadata_URI = IPFS_prefixes[IPFS_name] + metadata_info;\n  }\n  ;\n  return metadata_URI;\n}\n;\nexport async function getOpenSeaLink(contract_name_input, token_ID_input) {\n  if (!token_ID_input) {\n    token_ID_input = user_token_ID;\n  }\n  ;\n  if (!token_ID_input) {\n    token_ID_input = await setUserTokenID(contract_name_input);\n  }\n  ;\n  var contract_address;\n  if (contract_dict[contract_name_input]) {\n    contract_address = contract_dict[contract_name_input]['Address'][network_name];\n  } else {\n    contract_address = contract_name_input;\n  }\n  ;\n  var opensea_link = opensea_prefixes[network_name] + contract_address + '/' + token_ID_input;\n  console.log('OpenSea Link: ', opensea_link);\n  return opensea_link;\n}\nexport async function getNetwork() {\n  if (!network_name) {\n    provider = await setProvider();\n    if ('_network' in provider) {\n      network_name = provider['_network']['name'];\n    }\n    ;\n  }\n  ;\n  console.log('Network Name: ', network_name);\n  return network_name;\n}\nexport async function getJSONfromIPFS(metadata_URI_input) {\n  console.log('\\nSmartContractOperator >>> RUNNING getJSONfromIPFS()');\n  if (metadata_URI_input) {\n    console.log(\"metadata_URI_input:\", metadata_URI_input);\n    var metadata_URI;\n    if (!metadata_URI_input.includes('http')) {\n      metadata_URI = getMetadataURI(metadata_URI_input);\n    } else {\n      metadata_URI = metadata_URI_input;\n    }\n    ;\n    const response = await fetch(metadata_URI);\n    const JSON_contents = await response.json();\n    console.log('JSON Contents: ', JSON_contents);\n    return JSON_contents;\n  } else {\n    console.log('No metadata URI input!');\n  }\n  ;\n}\n;\nasync function getContractInfo(contract_name_input) {\n  const shit = 'balls';\n  //return({contract_address, contract_functions with number of inputs})\n}\n\n// Function to check if the network is already added to the wallet\nasync function checkNetworkAdded(network_name_input) {\n  try {\n    const networks = await window.ethereum.request({\n      method: 'wallet_getEthereumChain'\n    });\n    return networks.find(net => net.chainId === network_name_input.chainId);\n  } catch (error) {\n    console.error('Error:', error);\n    return false;\n  }\n}\nasync function promptNetworkSwitch(network_name_input) {\n  console.log('\\nSmartContractOperator >>> RUNNING promptNetworkSwitch()');\n  console.log('network_name_input:', network_name_input);\n  var network_switched = false;\n  if (network_name_input === 'polygon' || network_name_input === 'matic') {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: \"0x89\"\n      }]\n    });\n    network_switched = true;\n  } else if (network_name_input === 'goerli') {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: \"0x5\"\n      }]\n    });\n    network_switched = true;\n  }\n  ;\n  if (network_switched) {\n    network_name = network_name_input;\n    network_switched = false;\n    window.location.reload();\n  }\n}\n;\nexport async function promptAddNetwork(network_name_input) {\n  //if (!network_name_input || !network_dict.includes(network_name_input)) {\n  //  network_name_input = default_network;\n  //};\n  const network_params = network_dict[network_name_input]['add_network'];\n  // if (network_name_input === 'polygon' || network_name_input === 'matic') {\n  window.ethereum.request({\n    method: \"wallet_addEthereumChain\",\n    params: [network_params]\n  });\n  // };\n  network_name = network_name_input;\n  return network_name;\n}\n;\nexport async function addNetwork(network_name_input) {\n  console.log('\\nSmartContractOperator >>> RUNNING addNetwork()');\n  console.log(\"network_name_input:\", network_name_input);\n  const network_added = await checkNetworkAdded(network_name_input);\n  if (!network_added) {\n    await promptAddNetwork(network_name_input);\n  }\n  ;\n  if (network_name !== network_name_input) {\n    await promptNetworkSwitch(network_name_input);\n  }\n  ;\n  console.log('Network switched to', network_name);\n}\n;\n\n// changed from \"export default\" to just \"export\" because SmartContractOperator fails to export the function with \"default\" present\nexport async function connectWallet(network_name_input) {\n  console.log('\\nSmartContractOperator >>> RUNNING connectWallet()');\n  console.log(\"network_name_input:\", network_name_input);\n  //contract_name = contract_name_input;\n  provider = await setProvider();\n  signer = await setSigner(provider);\n  user_address = await setUserAddress(signer);\n  user_balance = await setUserBalance(signer);\n  if ('_network' in provider) {\n    network_name = provider['_network']['name'];\n    network_ID = provider['_network']['chainId'];\n    console.log('Network Name & Chain ID:', network_name, network_ID);\n    if (!network_dict[network_name]) {\n      network_name = network_dict[network_ID]['name'];\n    }\n    ;\n    console.log('Network Name: ', network_name);\n  }\n  ;\n  if (network_name_input && network_name !== network_name_input) {\n    console.log('PROMPTED Network Switch to: ', network_name_input);\n    await addNetwork(network_name_input);\n  }\n  ;\n  //const contract = new ethers.Contract(contract_address_dict[network_name], json_ABI_list[network_name], provider);\n  //user_token_ID = await setUserTokenID(contract_name, user_address);\n  //user_metadata = await setUserMetadata(contract_name, user_address);\n  //user_avatar_URI = await setUserAvatarURI(user_metadata);\n  return {\n    'address': user_address,\n    'network_name': network_name,\n    //'token_ID': user_token_ID,\n    'balance': user_balance\n  };\n  //'metadata': user_metadata,\n  //'avatar_URI': user_avatar_URI,\n  //'contract_name': contract_name});\n}\n;\n\n//--------------------------------------------------------------------------------------------------\n//# Smart Contract Functions\n\nasync function parseABIfunctions(ABI) {\n  console.log('\\nSmartContractOperator >>> RUNNING parseABIfunctions()');\n  const functions = {};\n\n  // Iterate through each ABI entry\n  for (const entry of ABI) {\n    if (entry.type === 'function') {\n      const inputs = entry.inputs.map(input => input.name); // Extract input parameter names\n      functions[entry.name] = inputs; // Store function name and input parameter names\n    }\n  }\n  return functions;\n}\n;\nasync function extractABI(JSON_file_path) {\n  console.log('\\nSmartContractOperator >>> RUNNING extractABI()');\n  console.log('JSON_file_path:', JSON_file_path);\n  try {\n    // Read the JSON file\n\n    /////THIS LINE GIVES AN ERROR!\n    const JSON_data = fs.readFileSync(JSON_file_path, 'utf8');\n\n    // Parse the JSON data\n    const contract_data = JSON.parse(JSON_data);\n\n    // Extract and return the ABI\n    const ABI = contract_data.abi;\n    console.log('ABI:', ABI);\n    return ABI;\n  } catch (error) {\n    console.error('Error extracting ABI:', error);\n    return null;\n  }\n  ;\n}\n;\nasync function getABI(contract_name_input) {\n  // const JSON_file_path = contract_dict[contract_name_input]['ABI_location'];\n  const JSON_file_path = '../../../artifacts/contracts/' + contract_name_input + '.sol';\n  const ABI = await extractABI(JSON_file_path);\n  return ABI;\n}\n;\nexport async function getFunctionParams(contract_name_input, function_name_input) {\n  const function_params = contract_dict[contract_name_input]['Functions'][function_name_input];\n  return function_params;\n}\n;\nexport async function getContractFunctions(contract_name_input) {\n  const ABI = getABI(contract_name_input);\n  const functions = parseABIfunctions(ABI);\n  return functions;\n}\n\n//Should take contract address\nexport async function runContractFunction(contract_name_input, function_name, function_params = [], button_text_object = false) {\n  console.log('Contract Name: ', contract_name_input);\n  console.log('Function Name: ', function_name);\n  console.log('Function Params: ', function_params);\n  console.log('Mint Button: ', button_text_object);\n\n  // Assigns the preset contract address if it exists\n  // If not, `contract_name_input` is assumed to be the address itself\n  var contract_address;\n  if (contract_dict[contract_name_input]) {\n    contract_address = contract_dict[contract_name_input]['Address'][network_name];\n    contract_name = contract_name_input;\n  } else {\n    contract_address = contract_name_input;\n    contract_name = '';\n  }\n  ;\n  console.log('Contract Address:', contract_address);\n  if (!signer) {\n    signer = await setSigner();\n  }\n  ;\n  console.log('address', signer._address);\n\n  // const ABI = await getABI(contract_name_input);\n  // const iface = new Interface(ABI);\n  const iface = new Interface(contract_dict[contract_name_input]['ABI']);\n  iface.format(FormatTypes.full);\n  const contract = new ethers.Contract(contract_address, iface, signer);\n  const function_input_list = await getFunctionParams(contract_name_input, function_name);\n  console.log('function_input_list:', function_input_list);\n  var transaction_info;\n  if (Array.isArray(function_input_list)) {\n    console.log('SmartContractOperator: Using the NEW way!');\n    if (function_name === 'mint' || function_name === 'mintBatch') {\n      const mint_price_raw = await contract.getMyMintPrice();\n      console.log('Mint Price RAW:', mint_price_raw);\n      const mint_price_fixed = mint_price_raw / 1000000000000000000;\n      console.log('Mint Price FIXED:', mint_price_fixed);\n      const mint_price_rounding_amount = await getRounding(mint_price_fixed);\n      console.log('Mint Price ROUNDING AMOUNT:', mint_price_rounding_amount);\n      var total_mint_price = mint_price_fixed;\n      if (function_name === 'mintBatch') {\n        total_mint_price = mint_price_fixed * function_params[0]; // multiply by the 'amount' input\n      }\n      ;\n      total_mint_price = total_mint_price.toFixed(mint_price_rounding_amount);\n      console.log('TOTAL Mint Price:', total_mint_price);\n      transaction_info = await contract[function_name](...function_params, {\n        value: ethers.utils.parseUnits(total_mint_price.toString(), \"ether\")\n      });\n      user_minted_NFT = true;\n    } else {\n      transaction_info = await contract[function_name](...function_params);\n    }\n  } else {\n    if (function_name === 'mint') {\n      if (contract_name_input === 'MelioraComicV1') {\n        transaction_info = await contract.mint({\n          value: ethers.utils.parseUnits(\".000000000000005\", \"ether\")\n        });\n        user_minted_NFT = true;\n      } else {\n        transaction_info = await contract.mint(function_params[0], {\n          value: ethers.utils.parseUnits(\".000000000000005\", \"ether\")\n        });\n        user_minted_NFT = true;\n      }\n    } else if (function_name === '__mintFree') {\n      transaction_info = await contract.__mintFree(function_params[0]);\n      user_minted_NFT = true;\n    } else if (function_name === 'contractURI') {\n      transaction_info = await contract.contractURI();\n    } else if (function_name === '__setContractURI') {\n      transaction_info = await contract.__setContractURI(function_params[0]);\n    } else if (function_name === 'getMintPrice') {\n      transaction_info = await contract.getMintPrice(function_params[0]);\n    } else if (function_name === '__setMintPrice') {\n      transaction_info = await contract.__setMintPrice(function_params[0], function_params[1]);\n    } else if (function_name === 'getMaxSupply') {\n      transaction_info = await contract.getMaxSupply();\n    } else if (function_name === '__setMaxSupply') {\n      transaction_info = await contract.__setMaxSupply(function_params[0]);\n    } else if (function_name === 'tokenURI') {\n      transaction_info = await contract.tokenURI(function_params[0]);\n    } else if (function_name === '__setTokenURI') {\n      transaction_info = await contract.__setTokenURI(function_params[0], function_params[1]);\n    } else if (function_name === 'getPrimaryTokenID') {\n      transaction_info = await contract.getPrimaryTokenID(function_params[0]);\n    } else if (function_name === 'setPrimaryTokenID') {\n      transaction_info = await contract.setPrimaryTokenID(function_params[0]);\n    } else if (function_name === 'getPrimaryTokenURI') {\n      transaction_info = await contract.getPrimaryTokenURI(function_params[0]);\n    } else if (function_name === 'getPrimaryHolderByIndex') {\n      transaction_info = await contract.getPrimaryHolderByIndex(function_params[0]);\n    } else if (function_name === 'getPrimaryHolderCount') {\n      transaction_info = await contract.getPrimaryHolderCount();\n    } else if (function_name === 'getAllPrimaryHolders') {\n      transaction_info = await contract.getAllPrimaryHolders();\n    } else if (function_name === '__createTask') {\n      transaction_info = await contract.__createTask(function_params[0], function_params[1], function_params[2]);\n    } else if (function_name === 'getTaskHash') {\n      transaction_info = await contract.getTaskHash(function_params[0], function_params[1]);\n    } else if (function_name === 'getTask') {\n      transaction_info = await contract.getTask(function_params[0], function_params[1]);\n    } else if (function_name === 'getCharacter') {\n      transaction_info = await contract.getCharacter(function_params[0]);\n    } else if (function_name === 'completeTask') {\n      transaction_info = await contract.completeTask(function_params[0], function_params[1]);\n    } else if (function_name === 'completeTaskBatch') {\n      transaction_info = await contract.completeTaskBatch(function_params[0], function_params[1]);\n    } else if (function_name === 'setApprovalForAll') {\n      transaction_info = await contract.setApprovalForAll(function_params[0], function_params[1]);\n    }\n    ;\n  }\n  ;\n  console.log(\"Transaction info: \", transaction_info);\n  var transaction_hash = transaction_info.hash;\n  console.log(\"Transaction hash: \", transaction_hash);\n  if (transaction_hash) {\n    var transaction_receipt = await provider.getTransactionReceipt(transaction_hash);\n    console.log(\"Immediate transaction receipt: \", transaction_receipt);\n\n    // Button updated & code paused via while loop while awaiting contract execution\n    if (button_text_object) {\n      button_text_object.textContent = \"Executing\";\n      var loop_count = 1;\n      while (!transaction_receipt) {\n        await pause(500);\n        if (loop_count > 3) {\n          button_text_object.textContent = \"Executing\";\n          loop_count = 0;\n        } else {\n          button_text_object.insertAdjacentText('beforeEnd', '.');\n        }\n        transaction_receipt = await provider.getTransactionReceipt(transaction_hash);\n        loop_count += 1;\n      }\n      console.log(\"Mined transaction receipt: \", transaction_receipt);\n\n      // Button updated & code paused via while loop for duration of opensea_link_delay\n      var wait_count = 0;\n      while (wait_count < 2 * opensea_link_delay) {\n        await pause(500);\n        if (loop_count > 3) {\n          button_text_object.textContent = \"Executing\";\n          loop_count = 0;\n        } else {\n          button_text_object.insertAdjacentText('beforeEnd', '.');\n        }\n        loop_count += 1;\n        wait_count += 1;\n      }\n      ;\n      button_text_object.textContent = \"Executed!\";\n    }\n    ;\n  }\n  ;\n\n  // user_token_ID = parseInt(transaction_receipt.logs[0].topics[3], 10);\n\n  if (function_name === 'mint' || function_name === '__mintFree') {\n    console.log(\"Unparsed User Token ID: \", transaction_receipt.logs[0].topics[3]);\n\n    // const events = contract.interface.parseLog(transaction_receipt.logs[0]);\n    // const user_token_ID = events.args.token_ID;\n\n    user_token_ID = parseInt(transaction_receipt.logs[0].topics[3], 16);\n    console.log(\"Parsed Token ID:\", user_token_ID);\n    console.log(\"Transaction Info: \", transaction_info);\n    return user_token_ID;\n  } else {\n    console.log(\"Transaction Info: \", transaction_info);\n    return transaction_info;\n  }\n\n  // console.log(\"User Token ID: \", user_token_ID);\n  // console.log(parseInt(transaction_receipt.logs[0].topics[3], 10));\n}\n;\n\n//Should take contract address\nexport async function mintNFT(contract_name_input, mint_button, params) {\n  console.log('Mint Contract Name: ', contract_name_input);\n  console.log('Mint Params: ', params);\n  console.log('Mint Button: ', mint_button);\n\n  // Assigns the preset contract address if it exists\n  // If not, `contract_name_input` is assumed to be the address itself\n  var contract_address;\n  if (contract_dict[contract_name_input]) {\n    contract_address = contract_dict[contract_name_input]['Address'][network_name];\n  } else {\n    contract_address = contract_name_input;\n  }\n  ;\n  console.log('Contract Address:', contract_address);\n  if (!signer) {\n    signer = await setSigner();\n  }\n  ;\n  const iface = new Interface(contract_dict[contract_name_input]['ABI']);\n  iface.format(FormatTypes.full);\n  const contract = new ethers.Contract(contract_address, iface, signer);\n  var transactionInfo;\n  if (params.length === 0) {\n    transactionInfo = await contract.mint();\n  } else if (params.length === 1) {\n    transactionInfo = await contract.mint(params[0]);\n  } else if (params.length === 2) {\n    transactionInfo = await contract.mint(params[0], params[1]);\n  } else if (params.length === 3) {\n    transactionInfo = await contract.mint(params[0], params[1], params[2]);\n  } else if (params.length === 4) {\n    transactionInfo = await contract.mint(params[0], params[1], params[2], params[3]);\n  } else {\n    transactionInfo = await contract.mint(params[0], params[1], params[2], params[3], params[4]);\n  }\n  ;\n  user_minted_NFT = true;\n  console.log(\"Transaction info: \", transactionInfo);\n  var transactionHash = transactionInfo.hash;\n  console.log(\"Transaction hash: \", transactionHash);\n  var transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n  console.log(\"Immediate transaction receipt: \", transactionReceipt);\n\n  // Button updated & code paused via while loop while awaiting contract execution\n  mint_button.textContent = \"Minting\";\n  var loop_count = 1;\n  while (!transactionReceipt) {\n    await pause(500);\n    if (loop_count > 3) {\n      mint_button.textContent = \"Minting\";\n      loop_count = 0;\n    } else {\n      mint_button.insertAdjacentText('beforeEnd', '.');\n    }\n    transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n    loop_count += 1;\n  }\n  console.log(\"Mined transaction receipt: \", transactionReceipt);\n\n  // Button updated & code paused via while loop for duration of opensea_link_delay\n  var wait_count = 0;\n  while (wait_count < 2 * opensea_link_delay) {\n    await pause(500);\n    if (loop_count > 3) {\n      mint_button.textContent = \"Minting\";\n      loop_count = 0;\n    } else {\n      mint_button.insertAdjacentText('beforeEnd', '.');\n    }\n    loop_count += 1;\n    wait_count += 1;\n  }\n  console.log(\"Transaction Info: \", transactionInfo);\n  user_token_ID = parseInt(transactionReceipt.logs[0].topics[3], 10);\n  console.log(\"User Token ID: \", user_token_ID);\n  console.log(\"Unparsed User Token ID: \", transactionReceipt.logs[0].topics[3]);\n  return user_token_ID;\n}\n\n//--------------------------------------------------------------------------------------------------\n//# Optional Dev Page Functions for Testing\n\n//--------------------------------------------------------------------------------------------------\n//# Custom Smart Contract Calls\n// *Update this section with your smart contract's custom function calls\n\nexport async function getUserStats(address_input) {\n  if (!address_input) {\n    address_input = user_address;\n  }\n  ;\n  if (!address_input) {\n    address_input = await setUserAddress();\n  }\n  ;\n  const contract = new ethers.Contract(contract_dict['LMNTL']['Address'][network_name], contract_dict['LMNTL']['ABI'], provider);\n  user_token_ID = await contract.getPrimaryTokenID(address_input);\n  const user_primary_stats = await contract.getUserPrimaryStats(address_input);\n  console.log('User Primary Stats: ', user_primary_stats);\n  const user_stats_list = await contract.getUserCurrentStats(address_input);\n  const user_stats_dict = {\n    user_token_ID: user_token_ID,\n    user_primary_stats: user_primary_stats,\n    user_stats_list: user_stats_list\n  };\n  console.log('User Stats: ', user_stats_dict);\n  return user_stats_dict;\n}\nexport async function levelUp(level_up_button) {\n  if (!user_metadata_URI) {\n    user_metadata = await setUserMetadata();\n  }\n  ;\n  const iface = new Interface(contract_dict['LMNTL']['ABI']);\n  iface.format(FormatTypes.full);\n  const contract = new ethers.Contract(contract_dict['LMNTL']['Address'][network_name], iface, signer);\n  const old_metadata_base_address = user_metadata_URI.split('LMNTL')[0];\n  const old_metadata_filename = 'LMNTL' + user_metadata_URI.split('LMNTL')[1];\n  var new_metadata_URI;\n  if (network_IPFS_dict[network_name] === 'Pinata_old') {\n    new_metadata_URI = old_metadata_base_address + old_metadata_filename.substring(0, old_metadata_filename.length - 5) + \"2.png\";\n  } else {\n    new_metadata_URI = old_metadata_base_address + old_metadata_filename.substring(0, old_metadata_filename.length - 6) + \"2.json\";\n  }\n  ;\n  console.log('New Metadata URI: ', new_metadata_URI);\n  const transactionInfo = await contract.levelUp(user_address, new_metadata_URI);\n  console.log(\"Transaction info: \", transactionInfo);\n  var transactionHash = transactionInfo.hash;\n  console.log(\"Transaction hash: \", transactionHash);\n  var transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n  console.log(\"Immediate transaction receipt: \", transactionReceipt);\n  level_up_button.textContent = \"Evolving\";\n  var loop_count = 1;\n  while (!transactionReceipt) {\n    await pause(500);\n    if (loop_count > 3) {\n      level_up_button.textContent = \"Evolving\";\n      loop_count = 0;\n    } else {\n      level_up_button.insertAdjacentText('beforeEnd', '.');\n    }\n    transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n    loop_count += 1;\n  }\n  console.log(\"Mined transaction receipt: \", transactionReceipt);\n  console.log(\"Transaction Info: \", transactionInfo);\n  const response = await fetch(new_metadata_URI);\n  user_metadata_URI = new_metadata_URI;\n  user_metadata = await response.json();\n  user_avatar_URI = await setUserAvatarURI(user_metadata);\n  return {\n    'metadata': user_metadata,\n    'avatar_URI': user_avatar_URI\n  };\n}\n;","map":{"version":3,"names":["FormatTypes","Interface","fs","require","ethers","run_on_load","default_contract_name","contract_dict","contract_name","folder_URIs","NFT_Storage","Pinata","Pinata_old","JSON_URIs","background_list","pac_list","network_IPFS_dict","IPFS_prefixes","Infura","network_dict","chainId","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","default_network","network_name","network_ID","opensea_link_delay","opensea_prefixes","user_address","user_token_ID","user_metadata_URI","user_metadata","user_avatar_URI","user_balance","provider","signer","user_web_wallet","user_minted_NFT","capitalize","string","charAt","toUpperCase","slice","pause","time","Promise","resolve","setTimeout","getRounding","number","number_string","toString","console","log","decimal_index","indexOf","rounding_amount","length","onLoad","connectWallet","parseABIfunctions","setProvider","providers","Web3Provider","window","ethereum","setSigner","provider_input","send","getSigner","setUserAddress","signer_input","getAddress","setUserBalance","getBalance","utils","formatEther","setUserTokenID","contract_name_input","address_input","contract","Contract","getPrimaryTokenID","setUserMetadata","getPrimaryTokenURI","includes","response","fetch","json","error","message","setUserAvatarURI","metadata_input","getMetadataURI","metadata_info","getNetwork","metadata_URI","IPFS_name","getOpenSeaLink","token_ID_input","contract_address","opensea_link","getJSONfromIPFS","metadata_URI_input","JSON_contents","getContractInfo","shit","checkNetworkAdded","network_name_input","networks","request","method","find","net","promptNetworkSwitch","network_switched","params","location","reload","promptAddNetwork","network_params","addNetwork","network_added","ABI","functions","entry","type","inputs","map","input","extractABI","JSON_file_path","JSON_data","readFileSync","contract_data","JSON","parse","abi","getABI","getFunctionParams","function_name_input","function_params","getContractFunctions","runContractFunction","function_name","button_text_object","_address","iface","format","full","function_input_list","transaction_info","Array","isArray","mint_price_raw","getMyMintPrice","mint_price_fixed","mint_price_rounding_amount","total_mint_price","toFixed","value","parseUnits","mint","__mintFree","contractURI","__setContractURI","getMintPrice","__setMintPrice","getMaxSupply","__setMaxSupply","tokenURI","__setTokenURI","setPrimaryTokenID","getPrimaryHolderByIndex","getPrimaryHolderCount","getAllPrimaryHolders","__createTask","getTaskHash","getTask","getCharacter","completeTask","completeTaskBatch","setApprovalForAll","transaction_hash","hash","transaction_receipt","getTransactionReceipt","textContent","loop_count","insertAdjacentText","wait_count","logs","topics","parseInt","mintNFT","mint_button","transactionInfo","transactionHash","transactionReceipt","getUserStats","user_primary_stats","getUserPrimaryStats","user_stats_list","getUserCurrentStats","user_stats_dict","levelUp","level_up_button","old_metadata_base_address","split","old_metadata_filename","new_metadata_URI","substring"],"sources":["C:/Users/magnu/s/projects/solidity/SmartContractOperator/src/scripts/SmartContractOperator.js"],"sourcesContent":["// To add:\n// 1. Default function for calling any contract that makes sure there will be no errors,\n//    waits for any missing information, and has error handling.\n//      -This will include confirming that providers._network is defined\n\n// Admin page:\n// 1. Import admin settings from json, then create backup copy, then edit json to modify site\n// 2. Detailed settings for individual pages such as website.com/avatar are modified at website.com/admin/avatar\n//    Then, gate all /admin pages behind admin login\n\n// Web3 Oracles\n// 1. Supra\n// 2. Gelato\n// 3. ChainLink\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Imports\n\nimport { FormatTypes, Interface } from \"@ethersproject/abi\";\n\nconst fs = require(\"fs\");\nconst { ethers } = require(\"ethers\");\n//const { utils } = require('ethers').utils;\n//const { BigNumber } = require('ethers').BigNumber;\n\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Variable Declaration\n\nlet run_on_load = false;\nconst default_contract_name = 'MelioraComicV1';\n\nlet contract_dict = {'default': {},\n                     'Signatures': {'Address': {'mainnet': '',\n                                                'goerli': '0x22d95fff7bb4e88bf1651daea74e36896919dbc0',\n                                                'sepolia': '0x1Fd69E3941030940f58e537B15bea96F5e766291', \n                                                'optimism': '',\n                                                'optimism_sepolia': '0x1Fd69E3941030940f58e537B15bea96F5e766291'},\n                                   'ABI': `[{\n                                    \"inputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"constructor\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"approved\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"Approval\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"operator\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"approved\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"name\": \"ApprovalForAll\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"_fromTokenId\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"_toTokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"BatchMetadataUpdate\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"_tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"MetadataUpdate\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"previousOwner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"newOwner\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"OwnershipTransferred\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"PrimaryTokenAssigned\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_timestamp\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"completer_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"TaskCompleted\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_count\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_metadata_URI\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"name\": \"TaskCreated\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"Transfer\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"whitelist_tier\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"WhitelistAssigned\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_metadata_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__createTask\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__mintFree\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"new_collectionInfoURI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__setContractURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"old_collectionInfoURI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"new_max_supply\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"__setMaxSupply\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"old_max_supply\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"new_price\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"whitelist_tier\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"__setMintPrice\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"old_price\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"__setPrimaryTokenID\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__setTokenURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"old_token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"_maxSupply\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"approve\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"balanceOf\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"characters\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"metadata_URI\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tasks_completed\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"collectionInfoURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"completeTask\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"contractURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"getApproved\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"getCharacter\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"string[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"string[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes32[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"bytes32[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"address[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"address[]\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"getMaxSupply\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"whitelist_tier\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"getMintPrice\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"index\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"getPrimaryHolderByIndex\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"getPrimaryHolderCount\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"getPrimaryTokenID\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"getPrimaryTokenURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"_tokenURI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"getTask\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"\",\n                                        \"type\": \"bytes32\"\n                                      },\n                                      {\n                                        \"internalType\": \"address[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"address[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"getTaskHash\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"getWhitelistTier\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"holderPrimaryTokens\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"operator\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"isApprovedForAll\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"mint\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"payable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"mint_limits\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"mint_prices\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"name\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"owner\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"ownerOf\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"primaryTokenHolderIndex\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"renounceOwnership\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"safeTransferFrom\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes\",\n                                        \"name\": \"data\",\n                                        \"type\": \"bytes\"\n                                      }\n                                    ],\n                                    \"name\": \"safeTransferFrom\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"operator\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"approved\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"name\": \"setApprovalForAll\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"setPrimaryTokenID\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"bytes4\",\n                                        \"name\": \"interfaceId\",\n                                        \"type\": \"bytes4\"\n                                      }\n                                    ],\n                                    \"name\": \"supportsInterface\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"symbol\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"name\": \"taskHashArray\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"tasks\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"metadata_URI\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_creation_timestamp\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"task_creator_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"tokenURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"transferFrom\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"newOwner\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"transferOwnership\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"whitelist_tiers\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  }]`,\n                                   'Functions': {'mint': {'number_of_inputs': 1},\n                                                 '__mintFree': {'number_of_inputs': 1},\n                                                 'contractURI': {'number_of_inputs': 0},\n                                                 '__setContractURI': {'number_of_inputs': 1},\n                                                 'getMintPrice': {'number_of_inputs': 0},\n                                                 '__setMintPrice': {'number_of_inputs': 1},\n                                                 'getMaxSupply': {'number_of_inputs': 0},\n                                                 '__setMaxSupply': {'number_of_inputs': 1},\n                                                 'tokenURI': {'number_of_inputs': 1},\n                                                 '__setTokenURI': {'number_of_inputs': 2},\n                                                 'lockToken': {'number_of_inputs': 2},\n                                                 '__lockToken': {'number_of_inputs': 2},\n                                                 'unlockToken': {'number_of_inputs': 1},\n                                                 '__unlockToken': {'number_of_inputs': 1},\n                                                 'getTimeLocked': {'number_of_inputs': 1},\n                                                 'getLocked': {'number_of_inputs': 1},\n                                                 'getPrimaryTokenID': {'number_of_inputs': 1},\n                                                 'setPrimaryTokenID': {'number_of_inputs': 2},\n                                                 'getPrimaryTokenURI': {'number_of_inputs': 1},\n                                                 'getPrimaryHolderByIndex': {'number_of_inputs': 1},\n                                                 'getPrimaryHolderCount': {'number_of_inputs': 0},\n                                                 '__createTask': {'number_of_inputs': 3},\n                                                 'getTaskHash': {'number_of_inputs': 2},\n                                                 'getTask': {'number_of_inputs': 2},\n                                                 'getCharacter': {'number_of_inputs': 1},\n                                                 'completeTask': {'number_of_inputs': 2},\n                                                 'completeTaskBatch': {'number_of_inputs': 2},\n                                                 'setApprovalForAll': {'number_of_inputs': 2}}},\n                     'MelioraComicV1': {'Address': {'mainnet': '',\n                                                    'polygon': '',\n                                                    'mumbai': '0xbAE8C07F52d440573e503d4a89A056Cd1E1907e3',\n                                                    'base': '0x4E35d70889B5A698fE9AE2C19CB280f29DBDF7eC',\n                                                    'base_sepolia': '',\n                                                    'goerli': '',\n                                                    'sepolia': '0xE67EF54708a1e49591c804970091d36c1b780f36', \n                                                    'optimism': '',\n                                                    'optimism_sepolia': '0xDd87063B0fb8F7b13AFA7886F51106013004744f'},\n                                        'ABI_location': '../../../artifacts/contracts/MelioraComicV1.sol',\n                                          'ABI': `[{\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"initialOwner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"constructor\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"numerator\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"denominator\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC2981InvalidDefaultRoyalty\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"receiver\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC2981InvalidDefaultRoyaltyReceiver\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"numerator\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"denominator\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC2981InvalidTokenRoyalty\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"receiver\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC2981InvalidTokenRoyaltyReceiver\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"sender\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721IncorrectOwner\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"operator\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InsufficientApproval\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"approver\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InvalidApprover\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"operator\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InvalidOperator\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InvalidOwner\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"receiver\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InvalidReceiver\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"sender\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721InvalidSender\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"ERC721NonexistentToken\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"OwnableInvalidOwner\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"account\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"OwnableUnauthorizedAccount\",\n                                            \"type\": \"error\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"approved\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"Approval\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"operator\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"bool\",\n                                                \"name\": \"approved\",\n                                                \"type\": \"bool\"\n                                              }\n                                            ],\n                                            \"name\": \"ApprovalForAll\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"_fromTokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"_toTokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"BatchMetadataUpdate\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"_tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"MetadataUpdate\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"previousOwner\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"newOwner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"OwnershipTransferred\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"from\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"to\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"indexed\": true,\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"Transfer\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"anonymous\": false,\n                                            \"inputs\": [\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              },\n                                              {\n                                                \"indexed\": false,\n                                                \"internalType\": \"address\",\n                                                \"name\": \"user_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"WhitelistAssigned\",\n                                            \"type\": \"event\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"name\": \"__mintFree\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"token_ID\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"new_collectionInfoURI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"name\": \"__setContractURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"old_collectionInfoURI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"receiver_address\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint96\",\n                                                \"name\": \"fee_numerator\",\n                                                \"type\": \"uint96\"\n                                              }\n                                            ],\n                                            \"name\": \"__setDefaultRoyalty\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"name\": \"__setDefaultTokenURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"old_default_token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address payable\",\n                                                \"name\": \"recipient_address\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"fund_weight\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"__setFundRecipientWeight\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"old_fund_weight\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"new_max_supply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"__setMaxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"old_max_supply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"new_limit\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"__setMintLimit\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"old_limit\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"new_price\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"__setMintPrice\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"old_price\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"token_ID\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"name\": \"__setTokenURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"old_token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"token_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"name\": \"__setUniqueTokenBaseURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"old_unique_token_base_URI\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"new_unique_token_maxSupply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"__setUniqueTokenMaxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"old_unique_token_maxSupply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"new_whitelist_minimum_requirement\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"__setWhitelistMinimumRequirement\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"old_whitelist_minimum_requirement\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"new_whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"user_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"__setWhitelistTier\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"old_whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"__updateAllDefaultTokenURIs\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"current_supply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"__updateAllUniqueTokenURIs\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"current_supply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"_currentTokenID\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"_maxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"to\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"approve\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"balanceOf\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"collectionInfoURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"contractURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"defaultTokenURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"fundRecipientCount\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"fund_recipient_addresses\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"address payable\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"fund_recipient_weights\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"getApproved\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getCurrentSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getDefaultTokenURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getFundRecipientCount\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"recipient_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"getFundRecipientWeight\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getMaxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"getMintLimit\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"whitelist_tier\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"getMintPrice\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getMyMintLimit\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getMyMintPrice\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getMyWhitelistTier\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getTotalFundWeight\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getUniqueTokenBaseURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getUniqueTokenMaxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getUniqueTokenSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"unique_token_supply\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"user_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"getUserMintLimit\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"user_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"getUserMintPrice\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"getWhitelistMinimumRequirement\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"user_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"getWhitelistTier\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"owner\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"operator\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"isApprovedForAll\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"bool\",\n                                                \"name\": \"\",\n                                                \"type\": \"bool\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"recipient_address\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"isHuman\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"bool\",\n                                                \"name\": \"\",\n                                                \"type\": \"bool\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"mint\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"token_ID\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"payable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"amount\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"mintBatch\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"token_ID\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"payable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"mint_counts\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"mint_limits\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"name\": \"mint_prices\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"name\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"owner\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"ownerOf\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"renounceOwnership\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"salePrice\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"royaltyInfo\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"from\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"to\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"safeTransferFrom\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"from\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"to\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              },\n                                              {\n                                                \"internalType\": \"bytes\",\n                                                \"name\": \"data\",\n                                                \"type\": \"bytes\"\n                                              }\n                                            ],\n                                            \"name\": \"safeTransferFrom\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"operator\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"bool\",\n                                                \"name\": \"approved\",\n                                                \"type\": \"bool\"\n                                              }\n                                            ],\n                                            \"name\": \"setApprovalForAll\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"bytes4\",\n                                                \"name\": \"interfaceId\",\n                                                \"type\": \"bytes4\"\n                                              }\n                                            ],\n                                            \"name\": \"supportsInterface\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"bool\",\n                                                \"name\": \"\",\n                                                \"type\": \"bool\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"symbol\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"tokenURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"total_fund_weight\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"from\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"to\",\n                                                \"type\": \"address\"\n                                              },\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"tokenId\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"name\": \"transferFrom\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"newOwner\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"transferOwnership\",\n                                            \"outputs\": [],\n                                            \"stateMutability\": \"nonpayable\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"uniqueTokenBaseURI\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"string\",\n                                                \"name\": \"\",\n                                                \"type\": \"string\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"unique_token_maxSupply\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint256\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint256\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [],\n                                            \"name\": \"whitelist_minimum_requirement\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          },\n                                          {\n                                            \"inputs\": [\n                                              {\n                                                \"internalType\": \"address\",\n                                                \"name\": \"\",\n                                                \"type\": \"address\"\n                                              }\n                                            ],\n                                            \"name\": \"whitelist_tiers\",\n                                            \"outputs\": [\n                                              {\n                                                \"internalType\": \"uint16\",\n                                                \"name\": \"\",\n                                                \"type\": \"uint16\"\n                                              }\n                                            ],\n                                            \"stateMutability\": \"view\",\n                                            \"type\": \"function\"\n                                          }]`,\n                                          'Functions': {'mint': [],\n                                                        'mintBatch': ['amount'],\n                                                        '__mintFree': ['token_URI'],\n                                                        '__toggleMintLocked': [],\n                                                        'contractURI': [],\n                                                        '__setContractURI': ['new_contract_URI'],\n                                                        'getCurrentSupply': [],\n                                                        'getMaxSupply': [],\n                                                        '__setMaxSupply': ['new_max_supply'],\n                                                        'getUniqueTokenSupply': [],\n                                                        'getUniqueTokenMaxSupply': [],\n                                                        '__setUniqueTokenMaxSupply': ['new_unique_token_maxSupply'],\n                                                        'getWhitelistTier': ['user_address'],\n                                                        '__setWhitelistTier': ['whitelist_tier', 'user_address'],\n                                                        'getWhitelistMinimumRequirement': [],\n                                                        '__setWhitelistMinimumRequirement': ['new_whitelist_minimum_requirement'],\n                                                        'getMintPrice': ['whitelist_tier'],\n                                                        'getUserMintPrice': ['user_address'],\n                                                        'getMyMintPrice': [],\n                                                        '__setMintPrice': ['whitelist_tier', 'new_mint_price'],\n                                                        'getMintLimit': ['whitelist_tier'],\n                                                        'getUserMintLimit': ['user_address'],\n                                                        'getMyMintLimit': [],\n                                                        '__setMintLimit': ['whitelist_tier', 'mint_limit'],\n                                                        'tokenURI': ['token_ID'],\n                                                        '__setTokenURI': ['token_ID', 'new_token_URI'],\n                                                        'getDefaultTokenURI': [],\n                                                        '__setDefaultTokenURI': ['defaultTokenURI'],\n                                                        'getUniqueTokenBaseURI': [],\n                                                        '__setUniqueTokenBaseURI': ['uniqueTokenBaseURI'],\n                                                        '__updateAllDefaultTokenURIs': [],\n                                                        '__updateAllUniqueTokenURIs': [],\n                                                        '__setFundRecipientWeight' : ['recipient_address', 'fund_weight'],\n                                                        'getFundRecipientWeight': ['recipient_address'],\n                                                        'getFundRecipientCount': [],\n                                                        'getTotalFundWeight': [],\n                                                        'royaltyInfo': ['tokenId', 'salePrice'],\n                                                        '__setDefaultRoyalty': ['receiver_address', 'fee_percent'],\n                                                        'setRoyaltyRecipient': ['receiver_address'],\n                                                        'setRoyaltyFee': ['int_over_10000'],\n                                                        'setApprovalForAll': ['thing_1', 'thing_2']}},\n                     'LMNTL': {'Address': {'mainnet': '',\n                                           'goerli': '0xA70CB9f3768D9AEdF7390Fed92770dCDdE1D0C1D',\n                                           'hyperspace': '0xB4fECac2F5BdEc2eD15547cF857464c8691b9849'},\n                               'ABI': `[]`,\n                               'Functions': {'mint': {'number_of_inputs': 1}}},\n                     'FundSplitter': {'Address': {'mainnet': '',\n                                                    'mumbai': '0xE20c8268Bb7efCa16842300148553cDb7910A4A1',\n                                                    'base': '0xA47bD73D576544ca4380B614C1E7f9B3B3d601b9',\n                                                    'base_sepolia': '',\n                                                    'goerli': '',\n                                                    'sepolia': '', \n                                                    'optimism': '',\n                                                    'optimism_sepolia': ''},\n                                      'ABI_location': '../../../artifacts/contracts/FundSplitter.sol',\n                                      'ABI': `[{\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"initialOwner\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"constructor\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"owner\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"OwnableInvalidOwner\",\n                                        \"type\": \"error\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"account\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"OwnableUnauthorizedAccount\",\n                                        \"type\": \"error\"\n                                      },\n                                      {\n                                        \"anonymous\": false,\n                                        \"inputs\": [\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"previousOwner\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"newOwner\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"OwnershipTransferred\",\n                                        \"type\": \"event\"\n                                      },\n                                      {\n                                        \"stateMutability\": \"payable\",\n                                        \"type\": \"fallback\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address payable\",\n                                            \"name\": \"recipient_address\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"fund_weight\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"name\": \"__setFundRecipientWeight\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"old_fund_weight\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"getFundRecipientCount\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"recipient_address\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"getFundRecipientWeight\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"getTotalFundWeight\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"owner\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"renounceOwnership\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"newOwner\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"transferOwnership\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"stateMutability\": \"payable\",\n                                        \"type\": \"receive\"\n                                      }]`,\n                                      'Functions': {'mint': [],\n                                                        'mintBatch': ['amount'],\n                                                        '__mintFree': ['token_URI'],\n                                                        'contractURI': [],\n                                                        '__setContractURI': ['new_contract_URI'],\n                                                        'getCurrentSupply': [],\n                                                        'getMaxSupply': [],\n                                                        '__setMaxSupply': ['new_max_supply'],\n                                                        'getUniqueTokenSupply': [],\n                                                        'getUniqueTokenMaxSupply': [],\n                                                        '__setUniqueTokenMaxSupply': ['new_unique_token_maxSupply'],\n                                                        'getWhitelistTier': ['user_address'],\n                                                        '__setWhitelistTier': ['whitelist_tier', 'user_address'],\n                                                        'getWhitelistMinimumRequirement': [],\n                                                        '__setWhitelistMinimumRequirement': ['new_whitelist_minimum_requirement'],\n                                                        'getMintPrice': ['whitelist_tier'],\n                                                        'getUserMintPrice': ['user_address'],\n                                                        'getMyMintPrice': [],\n                                                        '__setMintPrice': ['whitelist_tier', 'new_mint_price'],\n                                                        'getMintLimit': ['whitelist_tier'],\n                                                        'getUserMintLimit': ['user_address'],\n                                                        'getMyMintLimit': [],\n                                                        '__setMintLimit': ['whitelist_tier', 'mint_limit'],\n                                                        'tokenURI': ['token_ID'],\n                                                        '__setTokenURI': ['token_ID', 'new_token_URI'],\n                                                        'getDefaultTokenURI': [],\n                                                        '__setDefaultTokenURI': ['defaultTokenURI'],\n                                                        'getUniqueTokenBaseURI': [],\n                                                        '__setUniqueTokenBaseURI': ['uniqueTokenBaseURI'],\n                                                        '__updateAllDefaultTokenURIs': [],\n                                                        '__updateAllUniqueTokenURIs': [],\n                                                        '__setFundRecipientWeight' : ['recipient_address', 'fund_weight'],\n                                                        'getFundRecipientWeight': ['recipient_address'],\n                                                        'getFundRecipientCount': [],\n                                                        'getTotalFundWeight': [],\n                                                        'royaltyInfo': ['tokenId', 'salePrice'],\n                                                        '__setDefaultRoyalty': ['receiver_address', 'fee_percent'],\n                                                        'setRoyaltyRecipient': ['receiver_address'],\n                                                        'setRoyaltyFee': ['int_over_10000'],\n                                                        '__setRoyaltyReceiver': ['receiver_address'],\n                                                        'setApprovalForAll': ['thing_1', 'thing_2']}}};\n\nvar contract_name = default_contract_name;\ncontract_dict['default'] = contract_dict[default_contract_name];\n\n\n\n\n// *Update metadata URIs with your IPFS files' information\nconst folder_URIs = {\n  NFT_Storage: 'bafybeiglxxim4fc4jxl53kxoxjsnrf7efcabx4jikrgrz2ralmgqlj6yai',\n  Pinata: 'QmcvaEQrzwiNjDZzJX1jBq5zDtvF9yc2Le6nyjquABEGmh',\n  Pinata_old: 'QmPF4nrDbTnGk2UWduZDw2FCHZcF6HJicYDdsDAkEqJgH7'};\n\nconst JSON_URIs = {\n  NFT_Storage: {0:'/LMNTLfire1.json',\n                1:'/LMNTLwater1.json',\n                2:'/LMNTLair1.json',\n                3:'/LMNTLearth1.json',\n                4:'/LMNTLfire2.json',\n                5:'/LMNTLwater2.json',\n                6:'/LMNTLair2.json',\n                7:'/LMNTLearth2.json',\n                background_list: \"bafybeicc2gguyju7625a3c6ie2gyukggwhgcle64a73bo4yxrtrr6zf2fi/background_list.json\",\n                pac_list: \"bafybeigmgu2k25bxwjmwxwrr2kwiwzzjpuy3mzew2yochngedqof5zgmu4/pac_list.json\"},\n  Pinata: {0:'/LMNTLfire1.json',\n           1:'/LMNTLwater1.json',\n           2:'/LMNTLair1.json',\n           3:'/LMNTLearth1.json',\n           4:'/LMNTLfire2.json',\n           5:'/LMNTLwater2.json',\n           6:'/LMNTLair2.json',\n           7:'/LMNTLearth2.json'},\n  Pinata_old: {0:'/LMNTLfire1.png',\n           1:'/LMNTLwater1.png',\n           2:'/LMNTLair1.png',\n           3:'/LMNTLearth1.png',\n           4:'/LMNTLfire2.png',\n           5:'/LMNTLwater2.png',\n           6:'/LMNTLair2.png',\n           7:'/LMNTLearth2.png'}};\n\nconst network_IPFS_dict = {'mainnet': 'Pinata',\n                           'goerli': 'NFT_Storage',\n                           'hyperspace': 'NFT_Storage',\n                           'sepolia': 'NFT_Storage'};\n\nconst IPFS_prefixes = {\n  Pinata: 'https://gateway.pinata.cloud/ipfs/',\n  Pinata_old: 'https://gateway.pinata.cloud/ipfs/',\n  Infura: '',\n  NFT_Storage: 'https://nftstorage.link/ipfs/'\n};\n\nconst network_dict = {'default': {},\n                      'ethereum': {'name': 'ethereum',\n                                   'chainId': 1,\n                                   'url': 'https://mainnet.infura.io/v3/',\n                                   'add_network': {chainId: '0x1', // Chain ID of the network\n                                                   chainName: 'Ethereum Mainnet', // Name of the network\n                                                   rpcUrls: ['https://mainnet.infura.io/v3/'], // RPC URL\n                                                   nativeCurrency: {\n                                                        name: 'ETH',\n                                                        symbol: 'ETH',\n                                                        decimals: 18},\n                                                   blockExplorerUrls: ['https://etherscan.io/']}},\n                      'goerli': {'name': 'goerli',\n                                 'chainId': 5,\n                                 'url': ''},\n                      'polygon': {'name': 'polygon',\n                                  'chainId': 137,\n                                  'url': '', \n                                  'add_network': {chainId: \"0x89\",\n                                                  rpcUrls: [\"https://rpc-mainnet.matic.network/\"],\n                                                  chainName: \"Matic Mainnet\",\n                                                  nativeCurrency: {\n                                                      name: \"MATIC\",\n                                                      symbol: \"MATIC\",\n                                                      decimals: 18\n                                                  },\n                                                  blockExplorerUrls: [\"https://polygonscan.com/\"]}},\n                      'mumbai': {'name': 'mumbai',\n                                  'chainId': 80001,\n                                  'url': 'https://rpc.ankr.com/polygon_mumbai', \n                                  'add_network': {chainId: \"0x13881\",\n                                                  rpcUrls: [\"https://rpc.ankr.com/polygon_mumbai\"],\n                                                  chainName: \"Mumbai Testnet\",\n                                                  nativeCurrency: {\n                                                      name: \"MATIC\",\n                                                      symbol: \"MATIC\",\n                                                      decimals: 18\n                                                  },\n                                                  blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]}},\n                      'sepolia': {'name': 'sepolia',\n                                  'chainId': 11155111,\n                                  'url': 'https://sepolia.infura.io/v3/',\n                                  'add_network': {chainId: \"0x2105\",\n                                                  rpcUrls: [\"https://sepolia.infura.io/v3/\"],\n                                                  chainName: \"Base\",\n                                                  nativeCurrency: {\n                                                      name: \"ETH\",\n                                                      symbol: \"ETH\",\n                                                      decimals: 18\n                                                  },\n                                                  blockExplorerUrls: [\"https://sepolia.etherscan.io/\"]}},\n                      'optimism': {'name': 'optimism',\n                                   'chainId': 10,\n                                   'url': ''},\n                      'optimism_sepolia': {'name': 'optimism_sepolia',\n                                           'chainId': 11155420,\n                                           'url': ''},\n                      'base': {'name': 'base',\n                                           'chainId': 8453,\n                                           'url': 'https://mainnet.base.org',\n                                           'add_network': {chainId: \"0x2105\",\n                                                           rpcUrls: [\"https://mainnet.base.org\", \"https://base.llamarpc.com\"],\n                                                           chainName: \"Base\",\n                                                           nativeCurrency: {\n                                                               name: \"ETH\",\n                                                               symbol: \"ETH\",\n                                                               decimals: 18\n                                                           },\n                                                           blockExplorerUrls: [\"https://basescan.org/\"]}},\n                      'base_sepolia': {'name': 'base_sepolia',\n                                           'chainId': 84532,\n                                           'url': 'https://base-sepolia-rpc.publicnode.com',\n                                           'add_network': {chainId: \"0x14a34\",\n                                                           rpcUrls: [\"https://base-sepolia-rpc.publicnode.com\"],\n                                                           chainName: \"Base Sepolia\",\n                                                           nativeCurrency: {\n                                                               name: \"ETH\",\n                                                               symbol: \"ETH\",\n                                                               decimals: 18\n                                                           },\n                                                           blockExplorerUrls: [\"https://sepolia.basescan.org/\"]}},\n                      1: {'name': 'ethereum',\n                                  'chainId': 1,\n                                  'url': 'https://mainnet.infura.io/v3/'},\n                      5: {'name': 'goerli',\n                                 'chainId': 5,\n                                 'url': ''},\n                      137: {'name': 'polygon',\n                                  'chainId': 137,\n                                  'url': ''},\n                      80001: {'name': 'mumbai',\n                                  'chainId': 80001,\n                                  'url': ''},\n                      11155111: {'name': 'sepolia',\n                                  'chainId': 11155111,\n                                  'url': 'https://sepolia.infura.io/v3/'},\n                      10: {'name': 'optimism',\n                                   'chainId': 10,\n                                   'url': ''},\n                      11155420: {'name': 'optimism_sepolia',\n                                           'chainId': 11155420,\n                                           'url': ''},\n                      8453: {'name': 'base',\n                                           'chainId': 8453,\n                                           'url': 'https://base.llamarpc.com'},\n                                           \n                      84532: {'name': 'base_sepolia',\n                                           'chainId': 84532,\n                                           'url': 'https://base-sepolia-rpc.publicnode.com'}};\n\nconst default_network = 'sepolia';\nvar network_name = default_network;\nvar network_ID = network_dict[default_network]['chainId'];\nnetwork_dict['default'] = network_dict[default_network];\n\nconst opensea_link_delay = 8;\nconst opensea_prefixes = {\n  'mainnet': 'https://opensea.io/assets/ethereum/',\n  'goerli': 'https://testnets.opensea.io/assets/goerli/',\n  'sepolia': 'https://testnets.opensea.io/assets/sepolia/',\n  'hyperspace': ''\n};\n\n// These variables are set as Context variables to be accessed by other components\nvar user_address, user_token_ID, user_metadata_URI, user_metadata, user_avatar_URI, user_balance, contract_name;\n\nvar provider, signer, user_web_wallet;\n\n\n\nvar user_minted_NFT = false;\n\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Basic Functions\n\n//const [address, toggleConnected] = useState(0);\n//const [isMinted, toggleMinted] = useState(0);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n\nfunction pause(time) {\n  return new Promise(resolve => setTimeout(resolve, time));\n}\n\n\nasync function getRounding(number) {\n  // Convert the number to a string\n  const number_string = number.toString();\n  console.log('number_string:', number_string);\n  // Find the position of the decimal point\n  const decimal_index = number_string.indexOf('.');\n  \n  // If there is no decimal point, return 0\n  if (decimal_index === -1) {\n      return 0;\n  }\n\n  const rounding_amount = number_string.length - decimal_index - 1;\n  \n  // Return the number of characters after the decimal point\n  return(rounding_amount);\n};\n\n\n\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Wallet & Metadata Functions\n\nif (run_on_load) {\n  onLoad();\n};\nasync function onLoad () {\n  if (run_on_load) {\n    run_on_load = false;\n    await connectWallet();\n    contract_dict['Signatures']['Functions'] = await parseABIfunctions(contract_dict['Signatures']['ABI']);\n    console.log(\"Functions:\", contract_dict['Signatures']['Functions']);\n    \n  }\n}\n\n\nasync function setProvider() {\n  provider = new ethers.providers.Web3Provider(window.ethereum);\n  console.log('Provider: ', provider);\n  user_web_wallet = provider['connection']['url'];\n  console.log('Web Wallet: ', user_web_wallet);\n  if ('_network' in provider) {\n    network_name = provider['_network']['name'];\n    console.log('Network: ', network_name);\n  };\n  return(provider);\n};\n\n\nasync function setSigner(provider_input) {\n  if (!provider_input) {\n    provider_input = provider;\n  };\n  if (!provider_input) {\n    provider_input = await setProvider();\n  };\n  // Prompt user for account connections\n  await provider_input.send(\"eth_requestAccounts\", []);\n  signer = await provider_input.getSigner();\n  console.log('Signer: ', signer);\n  return(signer);\n};\n\n\nasync function setUserAddress(signer_input) {\n  if (!signer_input) {\n    signer_input = signer;\n  };\n  if (!signer_input) {\n    signer_input = await setSigner();\n  };\n  user_address = await signer_input.getAddress();\n  console.log('Address: ', user_address);\n  return(user_address);\n}\n\n\nasync function setUserBalance(signer_input) {\n  if (!signer_input) {\n    signer_input = signer;\n  };\n  if (!signer_input) {\n    signer_input = await setSigner();\n  };\n  user_balance = await signer_input.getBalance();\n  user_balance = ethers.utils.formatEther(user_balance);\n  console.log('Balance: ', user_balance);\n  return user_balance;\n};\n\n\nexport async function setUserTokenID(contract_name_input, address_input) {\n  // Set user address\n  if (!address_input) {\n    address_input = user_address;\n  };\n  if (!address_input) {\n    address_input = await setUserAddress();\n  };\n\n  // Set contract name\n  if (!contract_name_input) {\n    contract_name_input = contract_name;\n  };\n  if (!contract_name_input) {\n    contract_name_input = default_contract_name;\n  };\n\n  const contract = new ethers.Contract(contract_dict[contract_name_input]['Address'][network_name], contract_dict[contract_name_input]['ABI'], provider);\n  user_token_ID = await contract.getPrimaryTokenID(address_input);\n  console.log('User Token ID: ', user_token_ID);\n  return user_token_ID;\n};\n\n\nexport async function setUserMetadata(contract_name_input, address_input) {\n  // Set user address\n  if (!address_input) {\n    address_input = user_address;\n  };\n  if (!address_input) {\n    address_input = await setUserAddress();\n  };\n\n  // Set contract name\n  if (!contract_name_input) {\n    contract_name_input = contract_name;\n  };\n  if (!contract_name_input) {\n    contract_name_input = default_contract_name;\n  };\n\n  const contract = new ethers.Contract(contract_dict[contract_name_input]['Address'][network_name], contract_dict[contract_name_input]['ABI'], provider);\n  user_metadata_URI = await contract.getPrimaryTokenURI(address_input);\n  if (user_metadata_URI.includes('.json')) {\n    try {\n      const response = await fetch(user_metadata_URI);\n      user_metadata = await response.json();\n      user_metadata['URI'] = user_metadata_URI;\n      console.log('User Metadata: ', user_metadata);\n      return user_metadata;\n    } catch(error) {\n      console.log('setUserMetadata Error:', error.message);\n    };\n  } else {\n    return user_metadata_URI;\n  };\n};\n\n\nexport async function setUserAvatarURI(metadata_input) {\n  if (!metadata_input) {\n    metadata_input = user_metadata;\n  };\n  if (!metadata_input) {\n    metadata_input = await setUserMetadata();\n  };\n  if (typeof(metadata_input) === 'string') {\n    user_avatar_URI = metadata_input;\n  } else {\n    user_avatar_URI = metadata_input['image'];\n  }\n  console.log('User Avatar URI: ', user_avatar_URI);\n  return user_avatar_URI;\n};\n\n\nexport async function getMetadataURI(metadata_info) {\n  if (!network_name) {\n    network_name = getNetwork();\n  }\n  var metadata_URI;\n  const IPFS_name = network_IPFS_dict[network_name];\n\n  // Pre-set Image URI\n  if (JSON_URIs[IPFS_name][metadata_info]) {\n    metadata_URI = IPFS_prefixes[IPFS_name] + folder_URIs[IPFS_name] + JSON_URIs[IPFS_name][metadata_info];\n  } else {\n    metadata_URI = IPFS_prefixes[IPFS_name] + metadata_info;\n  };\n  return metadata_URI;\n};\n\n\nexport async function getOpenSeaLink(contract_name_input, token_ID_input) {\n  if (!token_ID_input) {\n    token_ID_input = user_token_ID;\n  };\n  if (!token_ID_input) {\n    token_ID_input = await setUserTokenID(contract_name_input);\n  };\n\n  var contract_address;\n  if (contract_dict[contract_name_input]) {\n    contract_address = contract_dict[contract_name_input]['Address'][network_name];\n  } else {\n    contract_address = contract_name_input;\n  };\n\n  var opensea_link = opensea_prefixes[network_name] + contract_address + '/' + token_ID_input;\n  console.log('OpenSea Link: ', opensea_link);\n  return opensea_link;\n}\n\n\nexport async function getNetwork() {\n  if (!network_name) {\n    provider = await setProvider();\n    if ('_network' in provider) {\n      network_name = provider['_network']['name'];\n    };\n  };\n  console.log('Network Name: ', network_name);\n  return network_name;\n}\n\nexport async function getJSONfromIPFS(metadata_URI_input) {\n  console.log('\\nSmartContractOperator >>> RUNNING getJSONfromIPFS()');\n  if (metadata_URI_input) {\n    console.log(\"metadata_URI_input:\", metadata_URI_input);\n    var metadata_URI;\n    if (!metadata_URI_input.includes('http')) {\n      metadata_URI = getMetadataURI(metadata_URI_input);\n    } else {\n      metadata_URI = metadata_URI_input;\n    };\n    const response = await fetch(metadata_URI);\n    const JSON_contents = await response.json();\n    console.log('JSON Contents: ', JSON_contents);\n    return JSON_contents;\n  } else {\n    console.log('No metadata URI input!')\n  };\n};\n\n\nasync function getContractInfo(contract_name_input) {\n  const shit = 'balls';\n  //return({contract_address, contract_functions with number of inputs})\n}\n\n\n// Function to check if the network is already added to the wallet\nasync function checkNetworkAdded(network_name_input) {\n  try {\n      const networks = await window.ethereum.request({ method: 'wallet_getEthereumChain' });\n      return networks.find(net => net.chainId === network_name_input.chainId);\n  } catch (error) {\n      console.error('Error:', error);\n      return false;\n  }\n}\n\n\nasync function promptNetworkSwitch (network_name_input) {\n  console.log('\\nSmartContractOperator >>> RUNNING promptNetworkSwitch()');\n  console.log('network_name_input:', network_name_input);\n  var network_switched = false;\n  if (network_name_input === 'polygon' || network_name_input === 'matic') {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: \"0x89\" }],\n    });\n    network_switched = true;\n  } else if (network_name_input === 'goerli') {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: \"0x5\" }],\n    });\n    network_switched = true;\n  };\n\n  if (network_switched) {\n    network_name = network_name_input;\n    network_switched = false;\n    window.location.reload();\n  }\n};\n\n\nexport async function promptAddNetwork(network_name_input) {\n  //if (!network_name_input || !network_dict.includes(network_name_input)) {\n  //  network_name_input = default_network;\n  //};\n  const network_params = network_dict[network_name_input]['add_network'];\n  // if (network_name_input === 'polygon' || network_name_input === 'matic') {\n  window.ethereum.request({\n    method: \"wallet_addEthereumChain\",\n    params: [network_params]\n  });\n  // };\n  network_name = network_name_input;\n  return network_name;\n};\n\n\nexport async function addNetwork(network_name_input) {\n  console.log('\\nSmartContractOperator >>> RUNNING addNetwork()');\n  console.log(\"network_name_input:\", network_name_input);\n  const network_added = await checkNetworkAdded(network_name_input);\n  if (!network_added) {\n    await promptAddNetwork(network_name_input);\n  };\n  if (network_name !== network_name_input) {\n    await promptNetworkSwitch(network_name_input);\n  };\n  console.log('Network switched to', network_name);\n};\n\n\n// changed from \"export default\" to just \"export\" because SmartContractOperator fails to export the function with \"default\" present\nexport async function connectWallet(network_name_input) {\n  console.log('\\nSmartContractOperator >>> RUNNING connectWallet()');\n  console.log(\"network_name_input:\", network_name_input);\n  //contract_name = contract_name_input;\n  provider = await setProvider();\n  signer = await setSigner(provider);\n  user_address = await setUserAddress(signer);\n  user_balance = await setUserBalance(signer);\n  if ('_network' in provider) {\n    network_name = provider['_network']['name'];\n    network_ID = provider['_network']['chainId'];\n    console.log('Network Name & Chain ID:', network_name, network_ID);\n    if (!network_dict[network_name]) {\n      network_name = network_dict[network_ID]['name'];\n    };\n    console.log('Network Name: ', network_name);\n  };\n  if (network_name_input && (network_name !== network_name_input)) {\n    console.log('PROMPTED Network Switch to: ', network_name_input);\n    await addNetwork(network_name_input);\n  };\n  //const contract = new ethers.Contract(contract_address_dict[network_name], json_ABI_list[network_name], provider);\n  //user_token_ID = await setUserTokenID(contract_name, user_address);\n  //user_metadata = await setUserMetadata(contract_name, user_address);\n  //user_avatar_URI = await setUserAvatarURI(user_metadata);\n  return({'address': user_address,\n          'network_name': network_name,\n          //'token_ID': user_token_ID,\n          'balance': user_balance});\n          //'metadata': user_metadata,\n          //'avatar_URI': user_avatar_URI,\n          //'contract_name': contract_name});\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Smart Contract Functions\n\n\nasync function parseABIfunctions(ABI) {\n  console.log('\\nSmartContractOperator >>> RUNNING parseABIfunctions()');\n\n  const functions = {};\n\n  // Iterate through each ABI entry\n  for (const entry of ABI) {\n      if (entry.type === 'function') {\n          const inputs = entry.inputs.map(input => input.name); // Extract input parameter names\n          functions[entry.name] = inputs; // Store function name and input parameter names\n      }\n  }\n\n  return(functions);\n};\n\n\nasync function extractABI(JSON_file_path) {\n  console.log('\\nSmartContractOperator >>> RUNNING extractABI()');\n  console.log('JSON_file_path:', JSON_file_path);\n  try {\n      // Read the JSON file\n\n  /////THIS LINE GIVES AN ERROR!\n      const JSON_data = fs.readFileSync(JSON_file_path, 'utf8');\n      \n      // Parse the JSON data\n      const contract_data = JSON.parse(JSON_data);\n\n      // Extract and return the ABI\n      const ABI = contract_data.abi;\n      console.log('ABI:', ABI);\n      return ABI;\n  } catch (error) {\n      console.error('Error extracting ABI:', error);\n      return null;\n  };\n};\n\n\nasync function getABI(contract_name_input) {\n  // const JSON_file_path = contract_dict[contract_name_input]['ABI_location'];\n  const JSON_file_path = '../../../artifacts/contracts/' + contract_name_input + '.sol';\n  const ABI = await extractABI(JSON_file_path);\n  return(ABI); \n};\n\n\nexport async function getFunctionParams(contract_name_input, function_name_input) {\n  const function_params = contract_dict[contract_name_input]['Functions'][function_name_input];\n  return(function_params);\n};\n\n\nexport async function getContractFunctions(contract_name_input) {\n  const ABI = getABI(contract_name_input);\n  const functions = parseABIfunctions(ABI);\n  return(functions);\n}\n\n\n//Should take contract address\nexport async function runContractFunction(contract_name_input, function_name, function_params=[], button_text_object=false ) {\n  console.log('Contract Name: ', contract_name_input);\n  console.log('Function Name: ', function_name);\n  console.log('Function Params: ', function_params);\n  console.log('Mint Button: ', button_text_object);\n\n  // Assigns the preset contract address if it exists\n  // If not, `contract_name_input` is assumed to be the address itself\n  var contract_address;\n  if (contract_dict[contract_name_input]) {\n    contract_address = contract_dict[contract_name_input]['Address'][network_name];\n    contract_name = contract_name_input;\n  } else {\n    contract_address = contract_name_input;\n    contract_name = '';\n  };\n\n  console.log('Contract Address:', contract_address);\n  \n  if (!signer) {\n    signer = await setSigner();\n  };\n\n  console.log('address', signer._address);\n\n  // const ABI = await getABI(contract_name_input);\n  // const iface = new Interface(ABI);\n  const iface = new Interface(contract_dict[contract_name_input]['ABI']);\n  iface.format(FormatTypes.full);\n  const contract = new ethers.Contract(contract_address, iface, signer);\n  const function_input_list = await getFunctionParams(contract_name_input, function_name);\n\n  console.log('function_input_list:', function_input_list);\n  \n  var transaction_info;\n  \n  if (Array.isArray(function_input_list)) {\n    console.log('SmartContractOperator: Using the NEW way!');\n    if (function_name === 'mint' || function_name === 'mintBatch') {\n      const mint_price_raw = await contract.getMyMintPrice();\n      console.log('Mint Price RAW:', mint_price_raw);\n      const mint_price_fixed = mint_price_raw / 1000000000000000000;\n      console.log('Mint Price FIXED:', mint_price_fixed);\n      const mint_price_rounding_amount = await getRounding(mint_price_fixed);\n      console.log('Mint Price ROUNDING AMOUNT:', mint_price_rounding_amount);\n      var total_mint_price = mint_price_fixed;\n      if (function_name === 'mintBatch') {\n        total_mint_price = mint_price_fixed * function_params[0]; // multiply by the 'amount' input\n      };\n      total_mint_price = total_mint_price.toFixed(mint_price_rounding_amount);\n      console.log('TOTAL Mint Price:', total_mint_price);\n      transaction_info = await contract[function_name](...function_params, { value: ethers.utils.parseUnits(total_mint_price.toString(), \"ether\") });\n      user_minted_NFT = true;\n    } else {\n      transaction_info = await contract[function_name](...function_params);  \n    }\n  } else {\n    if (function_name === 'mint') {\n      if (contract_name_input === 'MelioraComicV1') {\n        transaction_info = await contract.mint({ value: ethers.utils.parseUnits(\".000000000000005\", \"ether\") });\n        user_minted_NFT = true;\n      } else {\n        transaction_info = await contract.mint(function_params[0], { value: ethers.utils.parseUnits(\".000000000000005\", \"ether\") });\n        user_minted_NFT = true;\n      }\n    } else if (function_name === '__mintFree') {\n      transaction_info = await contract.__mintFree(function_params[0]);\n      user_minted_NFT = true;\n    } else if (function_name === 'contractURI') {\n      transaction_info = await contract.contractURI();\n    } else if (function_name === '__setContractURI') {\n      transaction_info = await contract.__setContractURI(function_params[0]);\n    } else if (function_name === 'getMintPrice') {\n      transaction_info = await contract.getMintPrice(function_params[0]);\n    } else if (function_name === '__setMintPrice') {\n      transaction_info = await contract.__setMintPrice(function_params[0], function_params[1]);\n    } else if (function_name === 'getMaxSupply') {\n      transaction_info = await contract.getMaxSupply();\n    } else if (function_name === '__setMaxSupply') {\n      transaction_info = await contract.__setMaxSupply(function_params[0]);\n    } else if (function_name === 'tokenURI') {\n      transaction_info = await contract.tokenURI(function_params[0]);\n    } else if (function_name === '__setTokenURI') {\n      transaction_info = await contract.__setTokenURI(function_params[0], function_params[1]);\n    } else if (function_name === 'getPrimaryTokenID') {\n      transaction_info = await contract.getPrimaryTokenID(function_params[0]);\n    } else if (function_name === 'setPrimaryTokenID') {\n      transaction_info = await contract.setPrimaryTokenID(function_params[0]);\n    } else if (function_name === 'getPrimaryTokenURI') {\n      transaction_info = await contract.getPrimaryTokenURI(function_params[0]);\n    } else if (function_name === 'getPrimaryHolderByIndex') {\n      transaction_info = await contract.getPrimaryHolderByIndex(function_params[0]);\n    } else if (function_name === 'getPrimaryHolderCount') {\n      transaction_info = await contract.getPrimaryHolderCount();\n    } else if (function_name === 'getAllPrimaryHolders') {\n      transaction_info = await contract.getAllPrimaryHolders();\n    } else if (function_name === '__createTask') {\n      transaction_info = await contract.__createTask(function_params[0], function_params[1], function_params[2]);\n    } else if (function_name === 'getTaskHash') {\n      transaction_info = await contract.getTaskHash(function_params[0], function_params[1]);\n    } else if (function_name === 'getTask') {\n      transaction_info = await contract.getTask(function_params[0], function_params[1]);\n    } else if (function_name === 'getCharacter') {\n      transaction_info = await contract.getCharacter(function_params[0]);\n    } else if (function_name === 'completeTask') {\n      transaction_info = await contract.completeTask(function_params[0], function_params[1]);\n    } else if (function_name === 'completeTaskBatch') {\n      transaction_info = await contract.completeTaskBatch(function_params[0], function_params[1]);\n    } else if (function_name === 'setApprovalForAll') {\n      transaction_info = await contract.setApprovalForAll(function_params[0], function_params[1]);\n    };\n  };\n  console.log(\"Transaction info: \", transaction_info);\n  \n  var transaction_hash = transaction_info.hash;\n  console.log(\"Transaction hash: \", transaction_hash);\n\n  if (transaction_hash) {\n    var transaction_receipt = await provider.getTransactionReceipt(transaction_hash);\n    console.log(\"Immediate transaction receipt: \", transaction_receipt);\n\n    // Button updated & code paused via while loop while awaiting contract execution\n    if (button_text_object) {\n      button_text_object.textContent = \"Executing\";\n      var loop_count = 1;\n      while ( !transaction_receipt ) {\n        await pause(500);\n        if (loop_count > 3) {\n          button_text_object.textContent = \"Executing\";\n          loop_count = 0;\n        } else {\n          button_text_object.insertAdjacentText('beforeEnd', '.');\n        }\n        transaction_receipt = await provider.getTransactionReceipt(transaction_hash);\n        loop_count+=1;\n      }\n      console.log(\"Mined transaction receipt: \", transaction_receipt);\n\n      // Button updated & code paused via while loop for duration of opensea_link_delay\n      var wait_count = 0;\n      while ( wait_count < (2 * opensea_link_delay) ) {\n        await pause(500);\n        if (loop_count > 3) {\n          button_text_object.textContent = \"Executing\";\n          loop_count = 0;\n        } else {\n          button_text_object.insertAdjacentText('beforeEnd', '.');\n        }\n        loop_count+=1;\n        wait_count+=1;\n      };\n      button_text_object.textContent = \"Executed!\";\n    };\n  };\n\n  \n\n  // user_token_ID = parseInt(transaction_receipt.logs[0].topics[3], 10);\n\n  if (function_name === 'mint' || function_name === '__mintFree') {\n    console.log(\"Unparsed User Token ID: \", transaction_receipt.logs[0].topics[3]);\n\n    // const events = contract.interface.parseLog(transaction_receipt.logs[0]);\n    // const user_token_ID = events.args.token_ID;\n  \n    user_token_ID = parseInt( transaction_receipt.logs[0].topics[3], 16);\n  \n    console.log(\"Parsed Token ID:\", user_token_ID)\n    console.log(\"Transaction Info: \", transaction_info);\n    return user_token_ID; \n  } else {\n    console.log(\"Transaction Info: \", transaction_info);\n    return transaction_info;\n  }\n  \n  // console.log(\"User Token ID: \", user_token_ID);\n  // console.log(parseInt(transaction_receipt.logs[0].topics[3], 10));\n\n  \n   \n};\n\n\n\n\n\n\n\n//Should take contract address\nexport async function mintNFT(contract_name_input, mint_button, params) {\n  console.log('Mint Contract Name: ', contract_name_input);\n  console.log('Mint Params: ', params);\n  console.log('Mint Button: ', mint_button);\n\n  // Assigns the preset contract address if it exists\n  // If not, `contract_name_input` is assumed to be the address itself\n  var contract_address;\n  if (contract_dict[contract_name_input]) {\n    contract_address = contract_dict[contract_name_input]['Address'][network_name];\n  } else {\n    contract_address = contract_name_input;\n  };\n\n  console.log('Contract Address:', contract_address);\n  \n  if (!signer) {\n    signer = await setSigner();\n  };\n  const iface = new Interface(contract_dict[contract_name_input]['ABI']);\n  iface.format(FormatTypes.full);\n  const contract = new ethers.Contract(contract_address, iface, signer);\n  var transactionInfo;\n  \n\n  if (params.length === 0) {\n    transactionInfo = await contract.mint();\n  } else if (params.length === 1) {\n    transactionInfo = await contract.mint(params[0]);\n  } else if (params.length === 2) {\n    transactionInfo = await contract.mint(params[0], params[1]);\n  } else if (params.length === 3) {\n    transactionInfo = await contract.mint(params[0], params[1], params[2]);\n  } else if (params.length === 4) {\n    transactionInfo = await contract.mint(params[0], params[1], params[2], params[3]);\n  } else {\n    transactionInfo = await contract.mint(params[0], params[1], params[2], params[3], params[4]);\n  };\n  user_minted_NFT = true;\n  console.log(\"Transaction info: \", transactionInfo);\n  \n  var transactionHash = transactionInfo.hash;\n  console.log(\"Transaction hash: \", transactionHash);\n\n  var transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n  console.log(\"Immediate transaction receipt: \", transactionReceipt);\n\n  // Button updated & code paused via while loop while awaiting contract execution\n  mint_button.textContent = \"Minting\";\n  var loop_count = 1;\n  while ( !transactionReceipt ) {\n    await pause(500);\n    if (loop_count > 3) {\n      mint_button.textContent = \"Minting\";\n      loop_count = 0;\n    } else {\n      mint_button.insertAdjacentText('beforeEnd', '.');\n    }\n    transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n    loop_count+=1;\n  }\n  console.log(\"Mined transaction receipt: \", transactionReceipt);\n\n  // Button updated & code paused via while loop for duration of opensea_link_delay\n  var wait_count = 0;\n  while ( wait_count < (2 * opensea_link_delay) ) {\n    await pause(500);\n    if (loop_count > 3) {\n      mint_button.textContent = \"Minting\";\n      loop_count = 0;\n    } else {\n      mint_button.insertAdjacentText('beforeEnd', '.');\n    }\n    loop_count+=1;\n    wait_count+=1;\n  }\n  console.log(\"Transaction Info: \", transactionInfo);\n\n  user_token_ID = parseInt(transactionReceipt.logs[0].topics[3], 10);\n  console.log(\"User Token ID: \", user_token_ID);\n  console.log(\"Unparsed User Token ID: \", transactionReceipt.logs[0].topics[3]);\n  return user_token_ID;  \n}\n\n\n\n\n\n  \n  \n//--------------------------------------------------------------------------------------------------\n//# Optional Dev Page Functions for Testing\n\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Custom Smart Contract Calls\n// *Update this section with your smart contract's custom function calls\n\nexport async function getUserStats(address_input) {\n  if (!address_input) {\n    address_input = user_address;\n  };\n  if (!address_input) {\n    address_input = await setUserAddress();\n  };\n  const contract = new ethers.Contract(contract_dict['LMNTL']['Address'][network_name], contract_dict['LMNTL']['ABI'], provider);\n  user_token_ID = await contract.getPrimaryTokenID(address_input);\n  const user_primary_stats = await contract.getUserPrimaryStats(address_input);\n  console.log('User Primary Stats: ', user_primary_stats);\n  const user_stats_list = await contract.getUserCurrentStats(address_input);\n  const user_stats_dict = {\n    user_token_ID: user_token_ID,\n    user_primary_stats: user_primary_stats,\n    user_stats_list: user_stats_list\n  };\n  console.log('User Stats: ', user_stats_dict);\n  return user_stats_dict;\n}\n\n\nexport async function levelUp(level_up_button) {\n  if (!user_metadata_URI) {\n    user_metadata = await setUserMetadata();\n  };\n  const iface = new Interface(contract_dict['LMNTL']['ABI']);\n  iface.format(FormatTypes.full);\n  const contract = new ethers.Contract(contract_dict['LMNTL']['Address'][network_name], iface, signer);\n\n  const old_metadata_base_address = user_metadata_URI.split('LMNTL')[0];\n  const old_metadata_filename = 'LMNTL' + user_metadata_URI.split('LMNTL')[1];\n\n  var new_metadata_URI;\n\n  if (network_IPFS_dict[network_name] === 'Pinata_old') {\n    new_metadata_URI = old_metadata_base_address + old_metadata_filename.substring(0, old_metadata_filename.length - 5) + \"2.png\";\n  } else {\n    new_metadata_URI = old_metadata_base_address + old_metadata_filename.substring(0, old_metadata_filename.length - 6) + \"2.json\";\n  };\n  console.log('New Metadata URI: ', new_metadata_URI);\n  const transactionInfo = await contract.levelUp(user_address, new_metadata_URI);\n\n  console.log(\"Transaction info: \", transactionInfo);\n  var transactionHash = transactionInfo.hash;\n  console.log(\"Transaction hash: \", transactionHash);\n  var transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n  console.log(\"Immediate transaction receipt: \", transactionReceipt);\n  level_up_button.textContent = \"Evolving\";\n  var loop_count = 1;\n  while ( !transactionReceipt ) {\n    await pause(500);\n    if (loop_count > 3) {\n      level_up_button.textContent = \"Evolving\";\n      loop_count = 0;\n    } else {\n      level_up_button.insertAdjacentText('beforeEnd', '.');\n    }\n    transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n    loop_count+=1;\n  }\n\n  console.log(\"Mined transaction receipt: \", transactionReceipt);\n  console.log(\"Transaction Info: \", transactionInfo);\n\n  const response = await fetch(new_metadata_URI);\n  user_metadata_URI = new_metadata_URI;\n  user_metadata = await response.json();\n  user_avatar_URI = await setUserAvatarURI(user_metadata);\n  return({'metadata': user_metadata,\n          'avatar_URI': user_avatar_URI}); \n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAQA;AACA;;AAEA,SAASA,WAAW,EAAEC,SAAS,QAAQ,oBAAoB;AAE3D,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAM;EAAEC;AAAO,CAAC,GAAGD,OAAO,CAAC,QAAQ,CAAC;AACpC;AACA;;AAUA;AACA;;AAEA,IAAIE,WAAW,GAAG,KAAK;AACvB,MAAMC,qBAAqB,GAAG,gBAAgB;AAE9C,IAAIC,aAAa,GAAG;EAAC,SAAS,EAAE,CAAC,CAAC;EACb,YAAY,EAAE;IAAC,SAAS,EAAE;MAAC,SAAS,EAAE,EAAE;MACb,QAAQ,EAAE,4CAA4C;MACtD,SAAS,EAAE,4CAA4C;MACvD,UAAU,EAAE,EAAE;MACd,kBAAkB,EAAE;IAA4C,CAAC;IAC9E,KAAK,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;IACF,WAAW,EAAE;MAAC,MAAM,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MAC/B,YAAY,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACrC,aAAa,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACtC,kBAAkB,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MAC3C,cAAc,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACvC,gBAAgB,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACzC,cAAc,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACvC,gBAAgB,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACzC,UAAU,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACnC,eAAe,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACxC,WAAW,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACpC,aAAa,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACtC,aAAa,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACtC,eAAe,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACxC,eAAe,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MACxC,WAAW,EAAE;QAAC,kBAAkB,EAAE;MAAC,CAAC;MAC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b,UAAU,EAAE,EAAE;MACd,kBAAkB,EAAE;IAAE,CAAC;IACrC,cAAc,EAAE,+CAA+C;IAC/D,KAAK,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;IACH,WAAW,EAAE;MAAC,MAAM,EAAE,EAAE;MACN,WAAW,EAAE,CAAC,QAAQ,CAAC;MACvB,YAAY,EAAE,CAAC,WAAW,CAAC;MAC3B,aAAa,EAAE,EAAE;MACjB,kBAAkB,EAAE,CAAC,kBAAkB,CAAC;MACxC,kBAAkB,EAAE,EAAE;MACtB,cAAc,EAAE,EAAE;MAClB,gBAAgB,EAAE,CAAC,gBAAgB,CAAC;MACpC,sBAAsB,EAAE,EAAE;MAC1B,yBAAyB,EAAE,EAAE;MAC7B,2BAA2B,EAAE,CAAC,4BAA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","ignoreList":[]},"metadata":{},"sourceType":"module"}